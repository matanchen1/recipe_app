{"version":3,"sources":["firebase.js","addRecipe/Recipe.js","contexts/AuthContext.jsx","pages/group-code.jsx","pages/SignUp.jsx","pages/AddStory.jsx","pages/NavBar.jsx","addRecipe/StepLists.jsx","addRecipe/SlideBar.jsx","addRecipe/InstructionsForm.jsx","addRecipe/List.jsx","addRecipe/ingredients.jsx","addRecipe/UploadImage.js","addRecipe/Category.js","addRecipe/PrepTime.js","addRecipe/FilterSelect.js","addRecipe/RecipeDetails.jsx","addRecipe/AddStoryRecipe.js","addRecipe/addRecipeMain.jsx","pages/ShowRecipe.jsx","pages/ShowStory.jsx","familyPage/WhatsAppShare.js","familyPage/checkBox.js","familyPage/FilterList.js","familyPage/StoryDialog.js","familyPage/mediaCard.js","familyPage/DishesView.js","familyPage/CheckBox2.js","familyPage/DishesView2.js","familyPage/FamilyPage.jsx","ShowRecipeDir/ShowRecipeCopy.jsx","PrivateRoute.jsx","addRecipe/StoryDropImage.js","App.jsx","index.js"],"names":["app","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","db","firestore","filterOptions","categoryOption","dietOption","AllFiltersOption","Recipe","name","author","serving","images","notes","tags","prepTime","ingredientsList","ingredient","amount","typeAmount","ovenHeat","instructionDetails","storyContent","storyImages","category","filtersList","likeCounter","holiday","this","IngredientsList","story","content","text","console","log","stepsList","image","filterArr","filteresList","filterList","value","recipeConverter","OvenHeat","recipe","forEach","item","push","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","gettingData","setGettingData","groupcode","setGroupcode","recipes","setRecipes","familyName","setFamilyName","useEffect","onAuthStateChanged","user","uid","a","collection","doc","get","then","allRecipes","data","recipeArray","i","length","family_name","fetchData","err","message","addRecipe","update","FieldValue","arrayUnion","login","exists","signInWithEmailAndPassword","admin_email","admin_password","Error","signup","email","password","familyname","createUserWithEmailAndPassword","cred","set","members","logout","signOut","Provider","GroupCode","setShowSignUp","groupcodeRef","useRef","error","setError","history","useHistory","e","preventDefault","current","id","Alert","variant","Form","onSubmit","Group","controlId","Control","type","placeholder","ref","Text","className","Button","size","onClick","disabled","SignUp","emailRef","passRef","passwordConfRef","familyNameRef","required","AddStory","open","setOpen","btnMessage","setBtnMessage","allIngredients","lessIngredients","slice","restOfIngredients","Item","props","Card","Container","Row","Col","Img","fluid","src","ImgOverlay","Title","Body","map","Collapse","in","aria-controls","aria-expanded","Label","as","rows","File","style","margin","NavBar","Navbar","bg","expand","Brand","Toggle","Nav","useStyles","makeStyles","theme","font","color","buttons","padding","button","background","marginTop","spacing","marginLeft","StepLists","step","inputList","setInputList","handleAddClick","classes","x","TextField","InputLabelProps","shrink","fullWidth","label","onChange","index","target","list","tempRecipe","setInstruction","handleInputChange","splice","handleRemoveClick","SlideBar","Typography","gutterBottom","Slider","defaultValue","getAriaValueText","aria-labelledby","min","max","valueLabelDisplay","marks","onChangeCommitted","event","val","setOvenHeat","form","display","flexDirection","minHeight","InstructionsForm","forwardRef","formHtmlRef","createRef","submitRef","useImperativeHandle","ValidBeforeNext","test","checkValidity","click","Fragment","hidden","Grid","container","xs","sm","input","border","layout","root","flexGrow","List","setIngredientsList","inputProps","startIcon","body","Ingredients","imgCenter","alignItems","justifyContent","textAlign","wrapper","position","buttonSuccess","backgroundColor","green","fabProgress","top","left","zIndex","buttonProgress","UploadImage","FilesFlag","file","setFile","url","setUrl","success","setSuccess","timer","buttonClassname","clsx","clearTimeout","handleFocusBack","window","removeEventListener","upload","files","storage","storageRef","fileName","child","fileRef","put","on","snapshot","getDownloadURL","arr","getImageArr","setImages","accept","htmlFor","Fab","addEventListener","component","aria-label","PhotoCamera","CircularProgress","height","width","alt","formControl","minWidth","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","category_option","Category","FormControl","InputLabel","Select","setCategory","categoryName","MenuItem","PrepTime","setPrepTime","labelId","maxWidth","chips","flexWrap","chip","noLabel","filter_options","getStyles","personName","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","FilterSelect","filterListState","setFilterListState","useTheme","setAnotherFilter","multiple","Input","renderValue","selected","Chip","textField","marginBottom","RecipeDetails","submitFLag","setSubmitFlag","servingFlag","setServingFlag","recipeNameRef","servingsRef","notesRef","tagsRef","authorRef","inputRef","autoComplete","setName","setAuthor","setTags","helperText","setServing","setNotes","AddStoryRecipe","confirm","setValue","setStoryContent","backgroundImg","backgroundImage","backgroundSize","backgroundPosition","pa","marginRight","breakpoints","up","paper","textJustify","stepper","borderStyle","finalPage","emptyDiv","steps","useColorlibStepIconStyles","borderRadius","active","boxShadow","completed","ColorlibStepIcon","icons","1","xmlns","viewBox","fill","d","2","3","4","String","icon","ColorlibConnector","withStyles","alternativeLabel","line","StepConnector","AddRecipeMain","activeStep","setActiveStep","formRef","handleBack","CssBaseline","Paper","align","Stepper","connector","Step","StepButton","StepLabel","StepIconComponent","getStepContent","pading","ShowRecipe","media","DefaultRecipe","location","Header","defaultActiveKey","Link","href","CardDeck","getMainImage","Pictures","Picture_Titles","Picture_description","WhatsAppShare","WhatsappShareButton","title","WhatsappIcon","round","palette","nested","paddingLeft","DialogTitle","closeButton","right","grey","onClose","other","disableTypography","IconButton","DialogContent","MuiDialogContent","DialogActions","MuiDialogActions","StoryDialog","handleClose","Dialog","dividers","fontSize","Image","alignContent","img","autoFocus","MediaCard","pathname","CardActionArea","CardMedia","CardActions","zoom","overflow","gridList","CheckBox2","Checked","setChecked","CheckedDiet","setCheckedDiet","open2","setOpen2","ListItem","ListItemText","primary","timeout","unmountOnExit","disablePadding","FoodTypeCatList","Checkbox","currentIndex","newChecked","handleFilters","handleToggle","_id","checked","DietList","newCheckedDiet","handleToggle2","renderCheckboxLists2","FilterOptionStates","GetRecipes","DishesView2","AllRecipes","curRecipes","setCurRecipes","FoodCategoryFilter","DietFilter","Filters","setFilters","getGridListCols","isWidthUp","dietFilterCheck","newFilter","filtersArr","getFilters","includes","FoodTypeCheck","newFilters","foodTypeList","getCategory","updateRecipesForDiet","dietList","tempRecipes","updateRecipesForFoodType","filters","GridList","cellWidth","cellHeight","cols","GridListTile","getAuthor","getName","TitleStyle","FamImgStyle","direction","FamilyPage","header","objectFit","gridTemplateColumns","columnGap","gridGap","gap","recipeInfo","gridColumn","recipeIngredients","recipeInstructions","comments","Story","Comments","date","recipeStep","Comment","comment","PrivateRoute","Component","rest","render","to","StoryDropImage","filesArr","setFilesArr","urlArr","setUrlArr","uploadFile","Promise","resolve","setTimeout","acceptedFiles","dropzoneText","urlArrAwait","lab","App","showSignUp","StartPage","TempShowRecipe","useParams","basename","process","exact","path","SandBox2","ShowStory","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4b91beb5.chunk.js","sourcesContent":["import firebase from 'firebase';\nimport \"firebase/storage\"\nimport \"firebase/auth\"\n\n\n\nconst app = firebase.initializeApp({\n    apiKey: \"AIzaSyDnu-JocfHVA9L5-nT9BhZuLc0vPh2iXYA\",\n    authDomain: \"grandma-cooked-oatmeal.firebaseapp.com\",\n    databaseURL: \"https://grandma-cooked-oatmeal-default-rtdb.firebaseio.com\",\n    projectId: \"grandma-cooked-oatmeal\",\n    storageBucket: \"grandma-cooked-oatmeal.appspot.com\",\n    messagingSenderId: \"387846083697\",\n    appId: \"1:387846083697:web:40fa824bd6342212a3b7d0\",\n    measurementId: \"G-NSE9BK3H0E\"\n})\n\n;\n\nexport const auth = app.auth();\nexport const db = firebase.firestore();\n\nexport default app","export const filterOptions = [\r\n    'Vegan',\r\n    'Kosher',\r\n    'GlutenFree'];\r\n\r\nexport const categoryOption = [\r\n    {\r\n        \"_id\": 0,\r\n        \"name\": \"Salads\"\r\n    },\r\n    {\r\n        \"_id\": 1,\r\n        \"name\": \"Pies\"\r\n    },\r\n    {\r\n        \"_id\": 2,\r\n        \"name\": \"Fish\"\r\n    },\r\n    {\r\n        \"_id\": 3,\r\n        \"name\": \"Deserts\"\r\n    },\r\n    {\r\n        \"_id\": 4,\r\n        \"name\": \"Soup\"\r\n    },\r\n    {\r\n        \"_id\": 5,\r\n        \"name\": \"Other\"\r\n    },\r\n\r\n\r\n];\r\n\r\nexport const dietOption = [\r\n    {\r\n        \"_id\": 100,\r\n        \"name\": \"Vegan\"\r\n    },\r\n    {\r\n        \"_id\": 101,\r\n        \"name\": \"Kosher\"\r\n    },\r\n    {\r\n        \"_id\": 102,\r\n        \"name\": \"GlutenFree\"\r\n    },\r\n];\r\n\r\nexport const holidayOption = [\r\n    'Passover',\r\n    'Purim',\r\n    'Rosh Hashana',\r\n    'Shavuot'\r\n];\r\nexport const AllFiltersOption = {\r\n    filterOptions: [\r\n        'Vegan',\r\n        'Kosher',\r\n        'GlutenFree'],\r\n\r\n    categoryOption: [\r\n        'Salads',\r\n        'Pies',\r\n        'Fish',\r\n        'Deserts',\r\n        'Soup',\r\n        'Other',\r\n    ],\r\n\r\n    holidayOption: [\r\n        'Passover',\r\n        'Purim',\r\n        'Rosh Hashana',\r\n        'Shavuot'\r\n    ],\r\n    getDietFilters() {\r\n        return dietOption\r\n    },\r\n    getFoodTypes() {\r\n        return categoryOption;\r\n    },\r\n    getOnlyNameCategoryOption() {\r\n        return ['Salads',\r\n            'Pies',\r\n            'Fish',\r\n            'Deserts',\r\n            'Soup',\r\n            'Other',\r\n        ];\r\n    },\r\n\r\n\r\n    size() {\r\n        return 3;\r\n    }\r\n}\r\n\r\n\r\nexport default class Recipe {\r\n\r\n    constructor(name = \"\", author = \"\", serving = -1, images = [], notes = \"\", tags = \"\",\r\n                prepTime = \"Not mentioned\", ingredientsList =[{ingredient: \"\", amount: \"\", typeAmount: \"\"}], ovenHeat = \"\", instructionDetails = [],\r\n                storyContent = \"\", storyImages = [], category = \"Other\", filtersList = [],\r\n                likeCounter = 0,\r\n                Vegan = false, Kosher = false, GlutenFree = false, holiday = \"\",) {\r\n        this.name = name;\r\n        this.author = author;\r\n        this.serving = serving;\r\n        this.images = images;\r\n        this.notes = notes;\r\n        this.tags = tags;\r\n        this.prepTime = prepTime;\r\n        this.IngredientsList = ingredientsList;\r\n        this.ovenHeat = ovenHeat;\r\n        this.instructionDetails = instructionDetails;\r\n        this.story = {\r\n            content: storyContent,\r\n            images: storyImages,\r\n        };\r\n        this.category = category;\r\n        this.holiday = holiday;\r\n        this.filtersList = filtersList;\r\n        this.likeCounter = likeCounter;\r\n    }\r\n\r\n    setStoryContent(text){\r\n        this.story.content = text;\r\n    }\r\n\r\n    setName(name) {\r\n        this.name = name;\r\n    }\r\n\r\n\r\n    setAuthor(author) {\r\n        this.author = author\r\n    }\r\n\r\n    setServing(serving) {\r\n        this.serving = serving;\r\n    }\r\n\r\n    setNotes(notes) {\r\n        this.notes = notes;\r\n    }\r\n\r\n    setTags(tags) {\r\n        this.tags = tags;\r\n    }\r\n\r\n    setIngredientsList(IngredientsList) {\r\n        this.IngredientsList = IngredientsList;\r\n        console.log(this.IngredientsList); //  TODO:REMOVE THIS\r\n    }\r\n\r\n    setInstruction(stepsList) {\r\n        this.instructionDetails = stepsList;\r\n        console.log(this.instructionDetails); //  TODO:REMOVE THIS\r\n    }\r\n\r\n    setOvenHeat(ovenHeat) {\r\n        this.ovenHeat = ovenHeat;\r\n    }\r\n\r\n    setPrepTime(prepTime) {\r\n        this.prepTime = prepTime;\r\n        console.log(this.prepTime); //  TODO:REMOVE THIS\r\n    }\r\n\r\n    setImages(image) {\r\n        this.images = image;\r\n        console.log(this.images)\r\n    }\r\n\r\n    setCategory(category) {\r\n        this.category = category;\r\n    }\r\n\r\n    setFilterList(filterArr) {\r\n        this.filteresList = filterArr\r\n    }\r\n\r\n    getStoryContent() {\r\n        return this.story.content;\r\n    }\r\n\r\n    setAnotherFilter(filterList) {\r\n        this.filtersList = filterList;\r\n        console.log(\"filterList: \", this.filtersList)\r\n    }\r\n\r\n    getFilters() {\r\n        return this.filtersList;\r\n    }\r\n\r\n\r\n    getName() {\r\n        return this.name;\r\n    }\r\n\r\n    getCategory() {\r\n        return this.category;\r\n    }\r\n\r\n    getAuthor() {\r\n        return this.author;\r\n    }\r\n\r\n    getMainImage() {\r\n        return this.images[0];\r\n    }\r\n\r\n    getImageArr(){\r\n        return this.images;\r\n    }\r\n    getFilterOption() {\r\n        return filterOptions;\r\n    }\r\n\r\n    getCategoryOption() {\r\n        return categoryOption;\r\n    }\r\n\r\n    getHoliday() {\r\n        return this.holiday;\r\n    }\r\n\r\n    setHoliday(value) {\r\n        this.holiday = value;\r\n    };\r\n\r\n\r\n}\r\n\r\n\r\nexport const recipeConverter = {\r\n    toFirestore: function (Recipe) {\r\n        return {\r\n            name: Recipe.name,\r\n            author: Recipe.author,\r\n            serving: Recipe.serving,\r\n            notes: Recipe.notes,\r\n            tags: Recipe.tags,\r\n            prepTime: Recipe.prepTime,\r\n            IngredientsList: Recipe.IngredientsList,\r\n            OvenHeat: Recipe.ovenHeat,\r\n            instructionDetails: Recipe.instructionDetails,\r\n            images: Recipe.images,\r\n            category: Recipe.category,\r\n            filtersList: Recipe.filtersList,\r\n        };\r\n    },\r\n\r\n\r\n    fromFirestore: function (recipe) {\r\n        console.log(recipe.IngredientsList)\r\n        const ingredient = [];\r\n        recipe.IngredientsList.forEach(item => (\r\n            ingredient.push(item.amount + item.typeAmount + \" of \" + item.ingredient)\r\n        ))\r\n        return new Recipe(recipe.name, recipe.author, recipe.serving, recipe.images, recipe.notes, recipe.tags,\r\n            recipe.prepTime, ingredient, recipe.OvenHeat, recipe.instructionDetails,\r\n            \"\", [], recipe.category, recipe.filtersList);\r\n    }\r\n\r\n};\r\n\r\n//\r\n// this.name = recipe.name;\r\n// this.author = recipe.author;\r\n// this.serving = recipe.serving;\r\n// this.images = recipe.images;\r\n// this.notes = recipe.notes;\r\n// this.tags = recipe.tags;\r\n// this.prepTime = recipe.prepTime;\r\n// this.IngredientsList = recipe.IngredientsList;\r\n// this.OvenHeat = recipe.OvenHeat;\r\n// this.StepDetails = recipe.StepDetails;\r\n// this.story = {\r\n//     content: \"\",\r\n//     images: [],\r\n// };\r\n//\r\n// const RecipesFilter = () => {\r\n//     //food Type Filter\r\n//     let tempList = AllRecipes;\r\n//     let foodTypeList = getSelectedFoodType()\r\n//     if (foodTypeList.length > 0) {\r\n//         tempList = (tempList.filter((recipe) => {\r\n//             foodTypeList.includes(recipe.getCategory())\r\n//         }));\r\n//     }\r\n//\r\n//     let dietFilter = getSelectedDietFilter()\r\n// // no battery\r\n//     if (dietFilter.length > 0) {\r\n//         tempList.filter((recipe) => {\r\n//             filterRecipeByDiet(recipe)\r\n//         });\r\n//     }\r\n//\r\n//     setCurRecipes(tempList);\r\n// }","import React, {useContext, useState, useEffect} from 'react'\nimport {auth, db} from \"../firebase\"\nimport firebase from 'firebase';\nimport {recipeConverter} from \"../addRecipe/Recipe\"\nimport {func} from \"prop-types\";\n\n/**\n * Authentication context for user signup with firebase\n */\n\nconst AuthContext = React.createContext()\n\nexport function useAuth() {\n    return useContext(AuthContext)\n}\n\n\nexport function AuthProvider( {children}) {\n    const [currentUser, setCurrentUser] = useState();\n    const [loading, setLoading] = useState(true);\n    const [gettingData, setGettingData] = useState(true);\n    const [groupcode, setGroupcode] = useState(\"\");\n    const [recipes, setRecipes] = useState([]);\n    const [familyName, setFamilyName] = useState(\"\");\n\n    useEffect(() => {\n        const unsubscribe = auth.onAuthStateChanged(user => {\n            setCurrentUser(user)\n            if (user) {\n                setGroupcode(user.uid);\n                console.log(\"byee\");\n            }\n            setLoading(false);\n        })\n        return unsubscribe;\n    }, [setGroupcode])\n\n    function addRecipe(recipe) {\n        console.log(recipe)\n        return db.collection('users').doc(groupcode).update({\n                recipes: firebase.firestore.FieldValue.arrayUnion(recipeConverter.toFirestore(recipe))\n            })\n    }\n\n\n\n    useEffect(() => {\n        if(groupcode) {\n            setGettingData(true);\n            try {\n                const fetchData=async()=>{\n                    db.collection('users').doc(groupcode).get().then( doc => {\n                        const allRecipes = doc.data().recipes;\n                        const recipeArray = []\n                        for (let i = 0; i < allRecipes.length; i++) {\n                            recipeArray.push(recipeConverter.fromFirestore(allRecipes[i]))\n                        }\n                        setRecipes(recipeArray)\n                        setFamilyName(doc.data().family_name)\n                        setGettingData(false);\n                        console.log(\"hi\");\n\n                    })\n                }\n                fetchData();\n            } catch (err) {\n                console.log(err.message);\n            }\n        } else {\n            setRecipes([])\n            setFamilyName(\"\")\n        }\n    }, [groupcode, setRecipes, setFamilyName])\n\n    function signup(email, password, familyname) {\n        return auth.createUserWithEmailAndPassword(email, password).then(cred => {\n            return db.collection(\"users\").doc(cred.user.uid).set({\n                admin_email: email,\n                admin_password: password,\n                family_name: familyname,\n                members: [],\n                recipes: []\n            });\n        });\n    }\n\n\n    function login(groupcode) {\n        return db.collection(\"users\").doc(groupcode).get().then(doc  => {\n            if (doc.exists) {\n                return auth.signInWithEmailAndPassword(doc.data().admin_email, doc.data().admin_password);\n            } else {\n                throw new Error(\"Group code \" + groupcode + \" does not exist\");\n            }\n        })\n    }\n\n    function logout() {\n        return auth.signOut()\n    }\n\n    const value = {\n        addRecipe,\n        currentUser,\n        groupcode,\n        // fetchData,\n        familyName,\n        recipes,\n        login,\n        signup,\n        logout,\n\n    }\n    return (\n        <AuthContext.Provider value={value}>\n            {!loading && !gettingData && children}\n        </AuthContext.Provider>\n    )\n}\n","import React, {useRef, useState} from 'react'\nimport \"../styles/styles.css\"\n\nimport {Button, Form, Alert} from \"react-bootstrap\";\nimport {useAuth} from \"../contexts/AuthContext\";\nimport {useHistory} from \"react-router-dom\";\n\nexport default function GroupCode({ setShowSignUp }) {\n    const groupcodeRef = useRef();\n    const { login } = useAuth();\n    const [error, setError] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n    const history = useHistory();\n\n    async function handleSubmit(e) {\n        e.preventDefault();\n        try {\n            setError(\"\");\n            setLoading(true);\n            await login(groupcodeRef.current.value);\n            history.push(\"/main\");\n        } catch (err) {\n            setError(err.message);\n        }\n        setLoading(false);\n    }\n\n    return (\n        <div id=\"group-code\">\n            <h2>\n                Get cooking\n                <br />\n                and connecting\n            </h2>\n            {error && <Alert variant=\"danger\">{error}</Alert>}\n            <Form onSubmit={handleSubmit}>\n                <Form.Group controlId=\"formBasicEmail\">\n                    <Form.Control\n                        type=\"text\"\n                        placeholder=\"Group code\"\n                        ref={groupcodeRef}\n                    />\n                    <Form.Text className=\"text-muted\">\n                        Don't have a group code?\n                        <Button\n                            variant=\"link\"\n                            size=\"sm\"\n                            onClick={() => setShowSignUp(true)}\n                        >\n                            Sign up\n                        </Button>{\" \"}\n                        to create a family recipe book\n                    </Form.Text>\n                </Form.Group>\n                <Button disabled={loading} variant=\"success\" type=\"submit\">\n                    Enter to see and create\n                </Button>\n            </Form>\n\n        </div>\n    );\n}\n//\n","import React, { useRef, useState } from \"react\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Form, Alert } from \"react-bootstrap\";\n\nexport default function SignUp({ setShowSignUp }) {\n    // const [email, setEmail] = React.useState(\"\");\n    // const [password, setPassword] = React.useState(\"\");\n    const emailRef = useRef();\n    const passRef = useRef();\n    const passwordConfRef = useRef();\n    const familyNameRef = useRef();\n    const { signup } = useAuth();\n    const [error, setError] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n    const history = useHistory();\n\n    async function handleSubmit(e) {\n        e.preventDefault();\n\n        if (passRef.current.value !== passwordConfRef.current.value) {\n            return setError(\"Passwords do not match\");\n        }\n\n        try {\n            setError(\"\");\n            setLoading(true);\n            await signup(emailRef.current.value, passRef.current.value, familyNameRef.current.value);\n            history.push(\"/main\");\n        } catch (err) {\n            setError(err.message);\n        }\n        setLoading(false);\n    }\n\n    //   here we'll add fancy things that send the info to the database\n    //   Or, for the first milestome, send us to the next page\n    return (\n        <div id=\"signup\">\n            <h2>\n                Start collecting <br /> family memories\n            </h2>\n            {error && <Alert variant=\"danger\">{error}</Alert>}\n            <Form onSubmit={handleSubmit}>\n                <Form.Group id=\"family-name\">\n                    <Form.Control\n                        type=\"text\"\n                        placeholder=\"Family Name\"\n                        ref={familyNameRef}\n                        required\n                    />\n                </Form.Group>\n                <Form.Group id=\"email\">\n                    {/*<Form.Label>Email</Form.Label> */}\n                    <Form.Control\n                        type=\"email\"\n                        placeholder=\"Email\"\n                        ref={emailRef}\n                        required\n                    />\n                </Form.Group>\n                <Form.Group id=\"password\">\n                    {/* <Form.Label>Password</Form.Label> */}\n                    <Form.Control\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        ref={passRef}\n                        required\n                    />\n                </Form.Group>\n                <Form.Group id=\"password-confirm\">\n                    <Form.Control\n                        type=\"password\"\n                        placeholder=\"Password Confirmation\"\n                        ref={passwordConfRef}\n                        required\n                    />\n                </Form.Group>\n                <Button disabled={loading} variant=\"success\" type=\"submit\">\n                    Sign Up\n                </Button>\n            </Form>\n\n            <Form.Text className=\"text-muted\">\n                Already have an account?\n                <Button variant=\"link\" size=\"sm\" onClick={() => setShowSignUp(false)}>\n                    Sign in\n                </Button>\n            </Form.Text>\n            {/* We can see if the email is already signed up and let users\n      know we signed them in/it's the wrong password. In this case the\n      button should have a different kind of text*/}\n        </div>\n    );\n}\n","import React from \"react\";\nimport {\n    Form,\n    Button,\n    Card,\n    Container,\n    Collapse,\n    Row,\n    Col\n} from \"react-bootstrap\";\nimport \"../styles/AddStory.css\";\nimport {useHistory} from \"react-router-dom\";\n\n\nexport default function AddStory() {\n    const [open, setOpen] = React.useState(false);\n    const [btnMessage, setBtnMessage] = React.useState(\"Show Full Recipe\");\n    const recipeName = \"Grandma Shoshana's Indian Curry Recipe\";\n    const allIngredients = ['2 pounds skinless, boneless chicken breast halves',\n        '2 teaspoons salt', '½ cup cooking oil',\n        \"1 ½ cups chopped onion\", \"1 tablespoon minced garlic\",\n        \"1 ½ teaspoons minced fresh ginger root\",\n        \"1 tablespoon curry powder\",\n        \"1 teaspoon ground cumin\",\n        \"1 teaspoon ground turmeric\",\n        \"1 teaspoon ground coriander\",\n        \"1 teaspoon cayenne pepper\",\n        \"1 tablespoon water\",\n        \"1 (15 ounce) can crushed tomatoes\",\n        \"1 cup plain yogurt\",\n        \"1 tablespoon chopped fresh cilantro\",\n        \"1 teaspoon salt\",\n        \"½ cup water\",\n        \"1 teaspoon garam masala\",\n        \"1 tablespoon fresh lemon juice\"];\n    const lessIngredients = allIngredients.slice(0, 3);\n    const restOfIngredients = allIngredients.slice(3);\n    const directions = [\"Sprinkle the chicken breasts with 2 teaspoons salt.\",\n        \"Heat the oil in a large skillet over high heat; partially cook the chicken in the hot oil in batches until completely browned. Transfer the browned chicken breasts to a plate and set aside.\",\n        \"Reduce the heat under the skillet to medium-high; add the onion, garlic, and ginger to the oil remaining in the skillet and cook and stir until the onion turns translucent, about 8 minutes. \\\n         Stir the curry powder, cumin, turmeric, coriander, cayenne, and 1 tablespoon of water into the onion mixture; allow to heat together for about 1 minute while stirring. Mix the tomatoes, yogurt,\\\n         1 tablespoon chopped cilantro, and 1 teaspoon salt into the mixture. Return the chicken breast to the skillet along with any juices on the plate. Pour 1/2 cup water into the mixture; bring to a \\\n         boil, turning the chicken to coat with the sauce. Sprinkle the garam masala and 1 tablespoon cilantro over the chicken.\",\n        \"Cover the skillet and simmer until the chicken breasts are no longer pink in the center and the juices run clear, about 20 minutes. An instant-read thermometer inserted into the center should \\\n         read at least 165 degrees F (74 degrees C). Sprinkle with lemon juice to serve.\"];\n    const history = useHistory();\n\n\n    function toggle() {\n        setOpen(!open);\n        if (open) {\n            setBtnMessage(\"Show Full Recipe\");\n        } else {\n            setBtnMessage(\"Hide Recipe\");\n        }\n    }\n\n    function Item(props) {\n        return <li>{props.message}</li>;\n    }\n\n    return (\n        <div className=\"addstory\">\n            <Card className=\"background\">\n                <Container>\n                    <Row>\n                        <Col>\n                            <div className=\"showrecipe\">\n                                <Card className=\"recipecard\">\n                                    <Card.Img\n                                        className=\"darken\"\n                                        variant=\"top\"\n                                        fluid=\"true\"\n                                        src=\"https://cdn.glitch.com/0b57df91-f600-46a4-956b-70a322817e9a%2Fcurry-with-chicken-onions-indian-food-asian-cuisine.jpg?v=1618751636189\"\n                                    />\n                                    <Card.ImgOverlay>\n                                        <Card.Title className=\"text-white headline\">\n                                            {recipeName}\n                                        </Card.Title>\n                                    </Card.ImgOverlay>\n                                    <Card.Body>\n\n                                        <h5>Ingredients:</h5>\n                                        <ul>\n                                            {lessIngredients.map((message) => <Item key={message} message={message} />)}\n                                            <Collapse in={open}>\n                                                <div id=\"example-collapse-text\">\n                                                    {restOfIngredients.map((message) => <Item key={message} message={message} />)}\n                                                </div>\n                                            </Collapse>\n                                        </ul>\n                                        <Collapse in={open}>\n                                            <div id=\"example-collapse-text\">\n                                                Instructions:\n                                                <ol>\n                                                    {directions.map((message) => <Item key={message} message={message} />)}\n                                                </ol>\n                                            </div>\n                                        </Collapse>\n\n                                        <Container>\n                                            <Row>\n                                                <Col className=\"d-flex align-items-center justify-content-center \">\n                                                    <Button\n                                                        variant=\"outline-success\"\n                                                        onClick={toggle}\n                                                        aria-controls=\"example-collapse-text\"\n                                                        aria-expanded={open}\n                                                    >\n                                                        {btnMessage}\n                                                    </Button>\n                                                </Col>\n                                                <Col className=\"d-flex align-items-center justify-content-center\">\n                                                    <Button variant=\"outline-success\">Edit Recipe</Button>\n                                                </Col>\n                                            </Row>\n                                        </Container>\n                                    </Card.Body>\n                                </Card>\n                            </div>\n                        </Col>\n                        <Col id=\"rightcol\">\n                            <Card.Body>\n                                <h2>Add a Story</h2>\n                                <Form>\n                                    <Form.Group id=\"story\" >\n                                        <Form.Label>Tell the story behind this recipe:</Form.Label>\n                                        <Form.Control\n                                            as=\"textarea\"\n                                            rows={3}\n                                            placeholder=\"What do you remember about this recipe? When did you first try it? Who taught you how to make it? Why do you love it?\"\n                                        />\n                                    </Form.Group>\n                                    <Form.Group id=\"photo\">\n                                        <Form.Label>Add Photo</Form.Label>\n                                        <Form.File id=\"exampleFormControlFile1\" />\n                                    </Form.Group>\n                                </Form>\n                                <Container>\n                                    <Row>\n                                        <Col className=\"d-flex align-items-center justify-content-center\">\n                                            <Button\n                                                variant=\"success\"\n                                                type=\"submit\"\n                                                style={{ margin: \"10px\" }}\n                                            >\n                                                Save As Draft\n                                            </Button>\n                                        </Col>\n                                        <Col>\n                                            <Button\n                                                variant=\"success\"\n                                                type=\"submit\"\n                                                style={{ margin: \"10px\" }}\n                                                onClick={()=>history.push(\"/main\")}\n                                            >\n                                                Publish\n                                            </Button>\n                                        </Col>\n                                    </Row>\n                                </Container>\n                            </Card.Body>\n                        </Col>\n                    </Row>\n                </Container>\n            </Card>\n        </div>\n    );\n}\n","import React, { useState } from \"react\";\nimport {\n    Navbar,\n    Nav,\n    // NavItem,\n    // NavDropdown,\n    // Form,\n    // FormControl,\n    Button,\n    Alert\n} from \"react-bootstrap\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function NavBar() {\n    const { currentUser, logout} = useAuth();\n    const [error, setError] = useState(\"\");\n    const history = useHistory();\n\n    async function handleLogout() {\n        setError(\"\");\n\n        try {\n            await logout();\n            history.push(\"/\");\n        } catch (err) {\n            setError(\"Failed to Logout, \" + err.message);\n        }\n    }\n\n    // async function testGettingRecipes() {\n    //     setError(\"\");\n    //     try {\n    //         await fetchData();\n    //         // while(!recipes) {}\n    //         console.log(recipes);\n    //     } catch (err) {\n    //         setError(err.message);\n    //     }\n    // }\n\n    function handleLogoClick() {\n        if (currentUser) {\n            history.push(\"/main\");\n        }\n        else {\n            history.push(\"/\");\n        }\n    }\n\n    return (\n        <>\n            <Navbar bg=\"light\" expand=\"lg\" className=\"sticky-top\">\n                <Navbar.Brand onClick={handleLogoClick}>Grandma Cooked Oatmeal</Navbar.Brand>\n\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                        {/*             <Nav.Link href=\"#home\">Add Recipe</Nav.Link>\n            <Nav.Link href=\"#link\">Invite Family User</Nav.Link> */}\n                    </Nav>\n                    {currentUser && <strong>User: </strong>}\n                    {currentUser && currentUser.email}\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\n                    {currentUser && <Button className=\"ml-sm-2\" onClick={handleLogout}>Logout</Button>}\n                    {/*{currentUser && <Button className=\"ml-sm-2\" onClick={testGettingRecipes}>Log Recipes To Console</Button>}*/}\n                    {/*<Form inline>*/}\n                    {/*    <FormControl*/}\n                    {/*        type=\"text\"*/}\n                    {/*        placeholder=\"Search For Recipe\"*/}\n                    {/*        className=\"m-sm-2\"*/}\n                    {/*    />*/}\n                    {/*    <Button variant=\"outline-success\">Search</Button>*/}\n                    {/*</Form>*/}\n                </Navbar.Collapse>\n            </Navbar>\n        </>\n    );\n}\n","import React, {useState} from \"react\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {makeStyles} from \"@material-ui/core\";\r\n// import Grid from \"@material-ui/core/Grid\";\r\nimport {tempRecipe} from \"./addRecipeMain\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    font: {\r\n        color: 'rgba(80,13,9,0.9)',\r\n    },\r\n    buttons: {\r\n        color: \"white\",\r\n        padding: \"0 30px\",\r\n    },\r\n    button: {\r\n        background:\r\n            \"linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)\",\r\n        marginTop: theme.spacing(3),\r\n        marginLeft: theme.spacing(1)\r\n    },\r\n}));\r\n\r\nfunction StepLists() {\r\n\r\n\r\n    const [inputList, setInputList] = useState([{step: \"\"}]);\r\n    // handle input change\r\n    const handleInputChange = (e, index) => {\r\n        const {value} = e.target;\r\n        const list = [...inputList];\r\n        list[index] = value;\r\n        setInputList(list);\r\n        tempRecipe.setInstruction(list);\r\n    };\r\n\r\n    // handle click event of the Remove button\r\n    const handleRemoveClick = (index) => {\r\n        const list = [...inputList];\r\n        list.splice(index, 1);\r\n        setInputList(list);\r\n        tempRecipe.setInstruction(list);\r\n\r\n    };\r\n\r\n    // handle click event of the Add button\r\n    const handleAddClick = () => {\r\n        setInputList([...inputList, {step: \" \"}]);\r\n    };\r\n\r\n\r\n    const classes = useStyles();\r\n\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            {inputList.map((x, i) => {\r\n                return (\r\n                    <div className=\"box\">\r\n                        <TextField\r\n                            required\r\n                            InputLabelProps={{shrink: true}}\r\n                            fullWidth\r\n                            name=\"Steps\"\r\n                            color=\"secondary\"\r\n                            label=\"Step details:\"\r\n                            value={x.step}\r\n                            onChange={e => handleInputChange(e, i)}\r\n                        />\r\n                        <div className={classes.buttons}>\r\n                            {inputList.length !== 1 &&\r\n                            <Button\r\n                                className={classes.button}\r\n                                onClick={() => handleRemoveClick(i)}>Remove</Button>}\r\n                            {inputList.length - 1 === i &&\r\n                            <Button className={classes.button} onClick={handleAddClick}>Add Step {i + 2}</Button>}\r\n                        </div>\r\n                    </div>\r\n                );\r\n            })}\r\n            {/*debug*/}\r\n            {/*<div style={{marginTop: 20}}>{JSON.stringify(inputList)}</div>*/}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StepLists;","import Typography from \"@material-ui/core/Typography\";\nimport {makeStyles, Slider} from \"@material-ui/core\";\n// import Grid from \"@material-ui/core/Grid\";\nimport React, {useRef} from \"react\";\n// import TextField from \"@material-ui/core/TextField\";\nimport {tempRecipe} from \"./addRecipeMain\";\n\nconst useStyles = makeStyles(theme => ({}));\nexport default function SlideBar() {\n    // const classes = useStyles()\n    const marks = [\n        {\n            value: 100,\n            label: 'None',\n        },\n        {\n            value: 125,\n            label: '125°C',\n        },\n        {\n            value: 150,\n            label: '150°C',\n        },\n        {\n            value: 175,\n            label: '175°C',\n        },\n        {\n            value: 200,\n            label: '200°C',\n        }, {\n            value: 225,\n            label: '225°C',\n        },\n        {\n            value: 250,\n            label: '250°C',\n        },\n    ];\n\n    function valuetext(value) {\n        return `${value}°C`;\n    }\n\n    return (\n        <div>\n            <Typography id=\"discrete-slider-custom\" gutterBottom>\n                Oven heat\n            </Typography>\n            <Slider\n                defaultValue={100}\n                getAriaValueText={valuetext}\n                aria-labelledby=\"discrete-slider-custom\"\n                step={25}\n                min={100}\n                max={250}\n                valueLabelDisplay=\"auto\"\n                marks={marks}\n                onChangeCommitted={(event, val) => {\n                    tempRecipe.setOvenHeat(`${val}°C`);\n                    console.log(val);\n                    console.log(`${val}°C`);\n\n                }}\n\n                // orientation=\"vertical\"\n\n            />\n            {/*<div className={classes.b}>*/}\n            {/*    /!*    empty grid    *!/*/}\n            {/*</div>*/}\n        </div>\n    )\n        ;\n}\n","import React, {createRef, forwardRef, useImperativeHandle} from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport StepLists from \"./StepLists\";\nimport SlideBar from \"./SlideBar\";\nimport {Form} from \"react-bootstrap\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nconst useStyles = makeStyles(theme => ({\n    form: {\n        display: 'flex',\n        flexDirection: 'column',\n        minHeight: '60vh',\n    }\n}));\n\nconst InstructionsForm = forwardRef( (props ,ref) => {\n    const formHtmlRef = createRef();\n    const submitRef = createRef();\n    useImperativeHandle(ref, () => ({\n\n            ValidBeforeNext(test) {\n                if(test === \"test\") return true;\n                if (!formHtmlRef.current.checkValidity()) submitRef.current.click();\n                console.log(\"valid? \", formHtmlRef.current.checkValidity())\n                return formHtmlRef.current.checkValidity();\n            }\n        }\n    ))\nconst classes = useStyles();\n    return (\n        <form ref={formHtmlRef} >\n            <React.Fragment>\n                <input type=\"submit\" value=\"\" hidden={true} ref={submitRef} onSubmit={(e)=>{\n                    e.preventDefault()\n                }} />\n            <Typography variant=\"h6\" gutterBottom>\n                Instructions\n            </Typography>\n            <SlideBar/>\n\n            <Grid container spacing={3}>\n                <Grid item xs={12} sm={12}>\n                    <StepLists/>\n                </Grid></Grid>\n        </React.Fragment>\n        </form>\n    );\n})\nexport default InstructionsForm;","import React, {useState} from \"react\";\nimport TextField from '@material-ui/core/TextField';\nimport Button from \"@material-ui/core/Button\";\nimport {IconButton, makeStyles} from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport {tempRecipe} from \"./addRecipeMain\";\n\nconst useStyles = makeStyles(theme => ({\n        margin: {\n            margin: theme.spacing(1),\n        },\n\n        font: {\n            color: 'rgba(213,195,38,0.9)',\n        },\n        buttons: {\n            color: \"white\",\n            padding: \"0 30px\",\n        },\n        button: {\n            background:\n                \"linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)\",\n            marginTop: theme.spacing(1),\n            marginLeft: theme.spacing(1)\n        },\n        input: {\n            \"&:invalid\": {\n                border: \"red solid 2px\"\n            }\n\n        },\n        layout:{\n            display: \"flex\",\n            flexDirection: \"column\",\n        },\n        root: {\n            flexGrow: 1,\n        },\n\n\n    }\n));\n\nfunction List() {\n    const [inputList, setInputList] = useState(tempRecipe.IngredientsList);\n\n    // handle input change\n    const handleInputChange = (e, index) => {\n        const {name, value} = e.target;\n        const list = [...inputList];\n        list[index][name] = value;\n        setInputList(list);\n        tempRecipe.setIngredientsList(list);\n    };\n\n    // handle click event of the Remove button\n    const handleRemoveClick = (index) => {\n        const list = [...inputList];\n        list.splice(index, 1);\n        setInputList(list);\n        tempRecipe.setIngredientsList(list);\n\n    };\n\n    // handle click event of the Add button\n    const handleAddClick = () => {\n        setInputList([...inputList, {ingredient: \"\", amount: \"\", typeAmount:\"\"}]);\n    };\n\n\n    const classes = useStyles();\n\n\n    return (\n        <div className={classes.root}>\n            {inputList.map((x, i) => {\n                return (\n                    <div>\n                        <Grid container spacing={3} id={i+\"grid\"}>\n                            <Grid item xs={3} sm={2} >\n                                <TextField\n                                    InputLabelProps={{\n                                        shrink: true,\n                                    }}\n                                    required\n                                    fullWidth\n                                    name=\"ingredient\"\n                                    color=\"secondary\"\n                                    label=\"ingredient\"\n                                    value={x[\"ingredient\"]}\n                                    onChange={e => handleInputChange(e, i)}\n                                />\n                            </Grid>\n                            <Grid item xs={4} sm={2}>\n                                <TextField\n                                    required\n                                    type=\"number\"\n                                    color=\"secondary\"\n                                    fullWidth\n                                    name=\"amount\"\n                                    inputProps={{ min: 0,step:(1/10)}}\n                                    InputLabelProps={{\n                                        shrink: true,\n                                    }}\n                                    label=\"amount\"\n                                    value={x.amount}\n                                    onChange={e => handleInputChange(e, i)}\n                                />\n                            </Grid>\n                            <Grid item xs={4} sm={3}>\n                                <TextField\n                                    required\n                                    color=\"secondary\"\n                                    fullWidth\n                                    name=\"typeAmount\"\n                                    InputLabelProps={{\n                                        shrink: true,\n                                    }}\n                                    label=\"type amount\"\n                                    value={x.typeAmount}\n                                    onChange={e => handleInputChange(e, i)}\n                                />\n                            </Grid>\n                            <div className={classes.buttons}>\n                                {inputList.length !== 1 &&\n                                <Button\n                                    startIcon={<DeleteIcon/>}\n                                    className={classes.button}\n                                    onClick={() => handleRemoveClick(i)}>\n                                </Button>}\n                                {inputList.length - 1 === i &&\n                                <Button className={classes.button}\n                                        startIcon={<AddCircleIcon/>}\n                                        onClick={handleAddClick}> </Button>}\n                                }\n                            </div>\n\n                        </Grid>\n\n\n                    </div>\n                );\n            })}\n            {/*<IconButton aria-label=\"delete\" className={classes.margin}>*/}\n            {/*    <DeleteIcon />*/}\n            {/*</IconButton>\n            {/*<div style={{ marginTop: 20 }}>{JSON.stringify(inputList)}</div>*/}\n        </div>\n    );\n}\n\nexport default List;\n","import React, {createRef, forwardRef, useImperativeHandle} from 'react';\nimport Typography from '@material-ui/core/Typography';\n\nimport List from \"./List\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {tempRecipe} from \"./addRecipeMain\";\nconst useStyles = makeStyles(theme => ({\n    body: {\n        padding: theme.spacing(2),\n        minHeight: \"47vh\",\n    }\n}));\nconst Ingredients =  forwardRef((props, ref) => {\n\n    const formHtmlRef = createRef();\n    const submitRef = createRef();\n\n\n    useImperativeHandle(ref, () => ({\n\n            ValidBeforeNext(test) {\n                if(test === \"test\") return true;\n                if(!formHtmlRef.current.checkValidity()) submitRef.current.click();\n                console.log(\"valid? \", formHtmlRef.current.checkValidity());\n\n                return formHtmlRef.current.checkValidity();\n\n            }\n        }\n    ))\n\n\n    const classes = useStyles();\n    return (\n        <form ref={formHtmlRef} >\n            <React.Fragment>\n                <input type=\"submit\" value=\"\" hidden={true} ref={submitRef} onSubmit={(e)=>{\n                    e.preventDefault()\n                }} />\n                <Typography variant=\"h6\" gutterBottom background=\"#007F80\">\n                    Ingredients List\n                </Typography>\n                <div className={classes.body}>\n                    <List> </List>\n                </div>\n            </React.Fragment>\n        </form>\n\n    );\n})\n\nexport default Ingredients;","import {useEffect, useRef, useState} from \"react\"\r\nimport firebase from \"firebase\";\r\nimport {tempRecipe} from \"./addRecipeMain\";\r\nimport {makeStyles} from \"@material-ui/core\";\r\nimport {PhotoCamera} from \"@material-ui/icons\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {green} from \"@material-ui/core/colors\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport clsx from \"clsx\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n        input: {\r\n            display: 'none',\r\n        },\r\n        imgCenter: {\r\n            alignItems: 'center',\r\n            justifyContent: \"centre\",\r\n            textAlign: 'center',\r\n            margin: 'auto'\r\n        },\r\n        wrapper: {\r\n            margin: theme.spacing(1),\r\n            position: 'relative',\r\n        },\r\n\r\n        buttonSuccess: {\r\n            backgroundColor: green[500],\r\n            '&:hover': {\r\n                backgroundColor: green[700],\r\n            },\r\n        },\r\n        fabProgress: {\r\n            color: green[500],\r\n            position: 'absolute',\r\n            top: -6,\r\n            left: -6,\r\n            zIndex: 1,\r\n        },\r\n        buttonProgress: {\r\n            color: green[500],\r\n            position: 'absolute',\r\n            top: '50%',\r\n            left: '50%',\r\n            marginTop: -12,\r\n            marginLeft: -12,\r\n        },\r\n        button: {\r\n            background:\r\n                \"linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)\",\r\n            marginTop: theme.spacing(3),\r\n            marginLeft: theme.spacing(1)\r\n        },\r\n\r\n\r\n    }\r\n));\r\n\r\n\r\nexport default function UploadImage(FilesFlag) {\r\n    const [file, setFile] = useState(null);\r\n    const [url, setUrl] = useState(\"\");\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [success, setSuccess] = useState(false);\r\n    const timer = useRef();\r\n    const classes = useStyles();\r\n\r\n    const buttonClassname = clsx({\r\n        [classes.buttonSuccess]: success,\r\n    });\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            clearTimeout(timer.current);\r\n        };\r\n    }, []);\r\n\r\n    const handleFocusBack = () => {\r\n        console.log('focus-back');\r\n        setLoading(false);\r\n        window.removeEventListener('focus', handleFocusBack);\r\n    }\r\n\r\n    const handleButtonClick = () => {\r\n        if (!loading) {\r\n            setSuccess(false);\r\n            setLoading(true);\r\n        }\r\n        window.addEventListener('focus', handleFocusBack);\r\n    };\r\n\r\n    const upload = async (e) => {\r\n        let target = e.target.files[0];\r\n        if (!target) return;\r\n        await setFile(target);\r\n        const storageRef = await firebase.storage().ref(\"images\");\r\n        let fileName = target.name;\r\n        const fileRef = await storageRef.child(fileName)\r\n\r\n        // const response = await fetch(uri)\r\n        // const blob = await response.blob()\r\n        setLoading(true);\r\n        await fileRef.put(target).on(\r\n            \"state_changed\",\r\n            (snapshot) => {\r\n                setLoading(true);\r\n            },\r\n            error => {\r\n                console.log(error);\r\n            },\r\n            () => {\r\n                storageRef.child(fileName)\r\n                    .getDownloadURL()\r\n                    .then(url => {\r\n                        setUrl(url);\r\n                        const arr = [url,...(tempRecipe.getImageArr())]\r\n                        tempRecipe.setImages(arr)\r\n                        setLoading(false);\r\n                        setSuccess(true);\r\n                    });\r\n            }\r\n        );\r\n    };\r\n\r\n\r\n    console.log(\"url: \", url);\r\n\r\n\r\n    function getPreviewImg() {\r\n        if (url !== \"\") {\r\n            return (<div className={classes.imgCenter}>\r\n                <img src={url}\r\n                     height=\"135\" width=\"150\"\r\n                     alt=\"Recipe Photo\"/>\r\n            </div>)\r\n        }\r\n        return <div className={classes.imgCenter}/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.imgCenter}>\r\n                <input accept=\"image/*\" className={classes.input} id=\"icon-button-add-image-1\" type=\"file\"\r\n                       onChange={upload}/>\r\n                <Typography>Add photo (optional)</Typography>\r\n\r\n                <label htmlFor=\"icon-button-add-image-1\">\r\n                    <div className={classes.wrapper}>\r\n                        <Fab\r\n                            onClick={handleButtonClick}\r\n                            component=\"span\"\r\n                            aria-label=\"upload\"\r\n                            color=\"primary\"\r\n                            className={buttonClassname}>\r\n                            {success ? <CheckIcon/> : <PhotoCamera/>}\r\n                        </Fab>\r\n                        {loading && <CircularProgress\r\n                            size={64} className={classes.fabProgress}/>\r\n                        }\r\n\r\n                        {!loading && file != null &&\r\n                        \"     \" + file.name}\r\n                    </div>\r\n                </label>\r\n            </div>\r\n            {getPreviewImg()}\r\n\r\n            {/*{/{<LinearProgress variant=\"determinate\" value={progress}/>}/}*/}\r\n            {/*{/<input accept=\"image/\" className={classes.input} id=\"icon-button-file\" type=\"file\"*!/*/}\r\n            {/*/!*       onChange={upload}*!/*/}\r\n            {/*{//>/}*/}\r\n            {/*{/<label htmlFor=\"icon-button-file\">/}*/}\r\n            {/*/!*    <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">*!/*/}\r\n            {/*/!*        <PhotoCamera/>*!/*/}\r\n            {/*/!*    </IconButton>*!/*/}\r\n            {/*{/</label>/}*/}\r\n\r\n            {/*// {/{/{file !== null &&/}/}*/}\r\n            {/*// {/{/<Button className={classes.button}/}/}*/}\r\n            {/*//!        startIcon={<CloudUploadIcon/>}!//}*/}\r\n            {/*// {//!        onClick={upload}>!//}*/}\r\n            {/*// {/{/</Button>/}/}*/}\r\n            {/*// {//!    // <img src={url || \"http://via.placeholder.com/300\"} alt=\"firebase-image\"/>!//}*/}\r\n            {/*// {/{/}/}/}*/}\r\n        </div>\r\n    );\r\n\r\n}","import {FormControl, InputLabel, MenuItem, Select} from \"@material-ui/core\";\r\nimport {tempRecipe} from \"./addRecipeMain\";\r\nimport React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {AllFiltersOption, categoryOption} from \"./Recipe\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 360,\r\n    },\r\n\r\n}));\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n    PaperProps: {\r\n        style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n            width: 250,\r\n        },\r\n    },\r\n};\r\n\r\nconst category_option = AllFiltersOption.getOnlyNameCategoryOption();\r\n\r\n\r\nexport default function Category() {\r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n            <FormControl required className={classes.formControl}>\r\n\r\n                <InputLabel>Category</InputLabel>\r\n                <Select\r\n\r\n                    defaultValue=\"Other\"\r\n                    onChange={(e) => {\r\n                        tempRecipe.setCategory(e.target.value)\r\n                    }}\r\n                    MenuProps={MenuProps}\r\n                >\r\n                    {category_option.map((categoryName) => (\r\n                        <MenuItem key={categoryName} value={categoryName}>\r\n                            {categoryName}\r\n                        </MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n\r\n        </div>)\r\n}\r\n","import {FormControl, InputLabel, MenuItem, Select} from \"@material-ui/core\";\r\nimport {tempRecipe} from \"./addRecipeMain\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 360,\r\n    },\r\n\r\n}));\r\nexport default function PrepTime() {\r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel id=\"demo-simple-select-label\"\r\n                >Prep time:\r\n                </InputLabel>\r\n                <Select\r\n                    defaultValue=\"\"\r\n                    onChange={(e) => {\r\n                        tempRecipe.setPrepTime(e.target.value)\r\n                    }}\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    fullWidth>\r\n                    <MenuItem value={\"30 min or less\"}>30 min or less</MenuItem>\r\n                    <MenuItem value={\"1h\"}>1h</MenuItem>\r\n                    <MenuItem value={\"2h\"}>2h</MenuItem>\r\n                    <MenuItem value={\"3h\"}>3h or more</MenuItem>\r\n                </Select>\r\n            </FormControl>\r\n\r\n        </div>\r\n    );\r\n}","import React, {useEffect, useRef} from 'react';\r\nimport {makeStyles, useTheme} from '@material-ui/core/styles';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport {tempRecipe} from \"./addRecipeMain\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport {filterOptions} from \"./Recipe\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 350,\r\n        maxWidth: 400,\r\n    },\r\n    chips: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    button: {\r\n        background:\r\n            \"linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)\",\r\n        marginTop: theme.spacing(3),\r\n        marginLeft: theme.spacing(1)\r\n    },\r\n\r\n    chip: {\r\n        margin: 2,\r\n    },\r\n    noLabel: {\r\n        marginTop: theme.spacing(3),\r\n    },\r\n}));\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n    PaperProps: {\r\n        style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n            width: 250,\r\n        },\r\n    },\r\n};\r\n\r\nconst filter_options = filterOptions;\r\n\r\nfunction getStyles(name, personName, theme) {\r\n    return {\r\n        fontWeight:\r\n            personName.indexOf(name) === -1\r\n                ? theme.typography.fontWeightRegular\r\n                : theme.typography.fontWeightMedium,\r\n    };\r\n}\r\n\r\n\r\nexport default function FilterSelect() {\r\n    const [filterListState, setFilterListState] = React.useState([]);\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\r\n    useEffect(() => {\r\n        console.log(filterListState);\r\n        tempRecipe.setAnotherFilter(filterListState)\r\n\r\n    }, [filterListState]);\r\n\r\n\r\n    const handleChange = (event) => {\r\n        setFilterListState(event.target.value);\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel id=\"demo-mutiple-chip-label\">Tags</InputLabel>\r\n                <Select\r\n                    labelId=\"demo-mutiple-chip-label\"\r\n                    id=\"demo-mutiple-chip\"\r\n                    multiple\r\n                    fullWidth\r\n                    defaultValue={filterListState}\r\n                    value={filterListState}\r\n                    onChange={handleChange}\r\n                    input={<Input id=\"select-multiple-chip\"/>}\r\n                    renderValue={(selected) => (\r\n                        <div className={classes.chips}>\r\n                            {selected.map((value) => (\r\n                                <Chip key={value} label={value} className={classes.chip}/>\r\n                            ))}\r\n                        </div>\r\n\r\n                    )\r\n                    }\r\n                    MenuProps={MenuProps}\r\n                >\r\n                    {filter_options.map((name) => (\r\n                        <MenuItem key={name} value={name} style={getStyles(name, filterListState, theme)}>\r\n                            {name}\r\n                        </MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n\r\n\r\n        </div>\r\n    );\r\n}","import React, {createRef, forwardRef, useEffect, useImperativeHandle, useRef, useState} from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {tempRecipe} from \"./addRecipeMain\";\n// import {FormControl, InputLabel, MenuItem, Select} from \"@material-ui/core\";\nimport UploadImage from \"./UploadImage\";\nimport Category from \"./Category\";\nimport PrepTime from \"./PrepTime\";\nimport FilterSelect from \"./FilterSelect\";\n\nconst useStyles = makeStyles(theme => ({\n    body: {\n        minHeight: \"50vh\"\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 360,\n    },\n    textField: {\n        marginBottom: \"10px\",\n        textAlign: 'center'\n\n    },\n\n}));\n\nconst RecipeDetails = forwardRef((props, ref) => {\n    const classes = useStyles();\n    const [submitFLag, setSubmitFlag] = useState(false);\n    const [servingFlag, setServingFlag] = useState(true);\n    const recipeNameRef = useRef(\"\");\n    const servingsRef = useRef(\"\");\n    const notesRef = useRef(\"\");\n    const tagsRef = useRef(\"\");\n    const authorRef = useRef(\"\");\n    const formHtmlRef = createRef();\n    const submitRef = createRef();\n\n    // const [prepTime, setPrepTime] = useState(\"\");\n\n    useImperativeHandle(ref, () => ({\n\n            ValidBeforeNext(test) {\n                if (test === \"test\") return true;\n                if (!formHtmlRef.current.checkValidity()) submitRef.current.click();\n                console.log(\"valid? \", formHtmlRef.current.checkValidity());\n                setSubmitFlag(true);\n                return formHtmlRef.current.checkValidity() ;\n\n            }\n        }\n    ))\n\n\n    return (\n        <form ref={formHtmlRef} onSubmit={(e) => {\n            e.preventDefault()\n        }\n        }>\n            <React.Fragment>\n                <input type=\"submit\" value=\"\" hidden={true} ref={submitRef} onSubmit={(e) => {\n                    e.preventDefault()\n                }}/>\n\n                <div className={classes.body}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        Recipe's details\n                    </Typography>\n                    <div>\n                        <Grid container spacing={3}>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    error={submitFLag && recipeNameRef.current.value === \"\"}\n                                    className={classes.textField}\n                                    required\n                                    color=\"secondary\"\n                                    id=\"recipeName\"\n                                    name=\"RecipeName\"\n                                    label=\"Recipe name\"\n                                    defaultValue={tempRecipe.name}\n                                    inputRef={recipeNameRef}\n                                    fullWidth\n                                    autoComplete=\"given-name\"\n                                    onChange={(e) => {\n                                        tempRecipe.setName(recipeNameRef.current.value);\n                                    }}\n                                />\n                            </Grid>\n\n                            <Grid item xs={12} sm={6}>\n                                <Category/>\n                            </Grid>\n\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    // className={classes.textField}\n                                    required\n                                    id=\"author\"\n                                    color=\"secondary\"\n                                    name=\"author\"\n                                    label=\"Author\"\n                                    fullWidth\n                                    defaultValue={tempRecipe.author}\n                                    inputRef={authorRef}\n                                    onChange={(e) => {\n                                        tempRecipe.setAuthor(authorRef.current.value);\n                                    }}/>\n                            </Grid>\n\n                            <Grid item xs={12} sm={6}>\n                                <PrepTime/>\n                            </Grid>\n\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    id=\"tags\"\n                                    color=\"secondary\"\n                                    name=\"tags\"\n                                    label=\"Add tag, separated by commas\"\n                                    fullWidth\n                                    defaultValue={tempRecipe.tags}\n                                    inputRef={tagsRef}\n                                    onChange={(e) => {\n                                        tempRecipe.setTags(tagsRef.current.value);\n                                    }}/>\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    required\n                                    id=\"servings\"\n                                    name=\"serv\"\n                                    type=\"number\"\n                                    inputProps={{ min: 1,step:0.5}}\n                                    label=\"Servings:\"\n                                    fullWidth\n                                    color=\"secondary\"\n                                    defaultValue={(tempRecipe.serving === -1) ? \"\" : tempRecipe.serving}\n                                    helperText={(!servingFlag ) ? \"serving must be > 0\" : \"\"}\n                                    inputRef={servingsRef.current.value}\n                                    onChange={(e) => {\n                                        setServingFlag(servingsRef.current.value > 0)\n                                        tempRecipe.setServing(servingsRef.current.value);\n                                    }}\n\n                                />\n                            </Grid>\n\n                            <Grid item xs={12}>\n                                <TextField\n                                    color=\"secondary\"\n                                    id=\"notes\"\n                                    name=\"Notes\"\n                                    label=\"Notes\"\n                                    fullWidth\n                                    defaultValue={tempRecipe.notes}\n                                    inputRef={notesRef}\n                                    onChange={(e) => {\n                                        tempRecipe.setNotes(notesRef.current.value);\n                                    }}\n                                />\n                            </Grid>\n\n\n                            <Grid item xs={12} sm={6}>\n                                <FilterSelect/>\n                                {/*    empty Grid */}\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <UploadImage/>\n                            </Grid>\n                        </Grid>\n                    </div>\n                </div>\n            </React.Fragment>\n\n        </form>\n    );\n})\nexport default RecipeDetails;","import React, {createRef, forwardRef, useImperativeHandle, useState} from 'react'\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {tempRecipe} from \"./addRecipeMain\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {TextareaAutosize} from \"@material-ui/core\";\r\nimport {Card, Col, Form} from \"react-bootstrap\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    body: {\r\n        minHeight: \"50vh\"\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 360,\r\n    },\r\n    textField: {\r\n        marginBottom: \"10px\",\r\n        textAlign: 'center'\r\n\r\n    },\r\n\r\n}));\r\nconst AddStoryRecipe = forwardRef((props, ref) => {\r\n    const classes = useStyles();\r\n\r\n    useImperativeHandle(ref, () => ({\r\n            ValidBeforeNext() {\r\n                if (tempRecipe.story.content === \"\") {\r\n                    return window.confirm(\"are you sure you dont want to add story to your recipe?\");\r\n                }\r\n            return true;\r\n            }\r\n        }\r\n    ))\r\n\r\n\r\n    const [value, setValue] = useState(\"\");\r\n    return (\r\n        <React.Fragment>\r\n            <h2>Add a Story</h2>\r\n            <Form>\r\n                <Form.Group id=\"story\">\r\n                    <Form.Label>Tell the story behind this recipe:</Form.Label>\r\n                    <Form.Control\r\n                        value={value}\r\n                        onChange={(e => {\r\n                            setValue(e.target.value)\r\n                            tempRecipe.setStoryContent(e.target.value)\r\n                        })}\r\n                        as=\"textarea\"\r\n                        rows={3}\r\n                        placeholder=\"What do you remember about this recipe? When did you first try it? Who taught you how to make it? Why do you love it?\"\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group id=\"photo\">\r\n                    <Form.Label>Add Photo</Form.Label>\r\n                    <Form.File id=\"exampleFormControlFile1\"/>\r\n                </Form.Group>\r\n            </Form>\r\n        </React.Fragment>\r\n\r\n    )\r\n})\r\nexport default AddStoryRecipe;","import React, {createRef, useRef, useState} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n// import AppBar from \"@material-ui/core/AppBar\";\n// import Toolbar from \"@material-ui/core/Toolbar\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InstructionsForm from \"./InstructionsForm\";\nimport Ingredients from \"./ingredients\";\n\nimport clsx from \"clsx\";\nimport PropTypes from \"prop-types\";\nimport StepConnector from '@material-ui/core/StepConnector';\nimport {StepButton, withStyles} from \"@material-ui/core\";\nimport {useHistory} from \"react-router-dom\";\nimport MenuBookIcon from '@material-ui/icons/MenuBook';\n// import \"./styles/AddRecipe.css\";\nimport Recipe from \"./Recipe\"\nimport {useAuth} from \"../contexts/AuthContext\";\nimport RecipeDetails from \"./RecipeDetails\";\nimport AddStoryRecipe from \"./AddStoryRecipe\";\n\n// function Copyright() {\n//     return (\n//         <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n//             {\"Copyright © Grandma Cooked Oatmeal\\n \"}\n//             <Link color=\"inherit\" href=\"https://material-ui.com/\">\n//                 Grandma Cooked Oatmeal\n//             </Link>{\" \"}\n//             {new Date().getFullYear()}\n//             {\".\"}\n//         </Typography>\n//     );\n// }\n\n\nconst useStyles = makeStyles(theme => ({\n    font: {\n        // color: 'rgba(80,13,9,0.9)',\n    },\n    backgroundImg: {\n        backgroundImage: `url(https://cdn.glitch.com/0b57df91-f600-46a4-956b-70a322817e9a%2Fbrooke-lark-wMzx2nBdeng-unsplash.jpg?v=1619933227617)`,\n        height: \"auto\",\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center\",\n        textAlign: \"center\",\n        minHeight: \"100vh\"\n    },\n    layout: {\n        pa: \"3px\",\n        marginLeft: theme.spacing(2),\n        marginRight: theme.spacing(2),\n        [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n            width: 800,\n            height: 'auto',\n            marginLeft: 'auto',\n            marginRight: 'auto',\n        },\n    },\n\n    paper: {\n        minHeight: \"5vh\",\n        textAlign: \"justify\",\n        textJustify: \"inter-word\",\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(3),\n        padding: theme.spacing(2),\n        [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n            marginTop: theme.spacing(6),\n            marginBottom: theme.spacing(6),\n            padding: theme.spacing(3),\n            background: \"none\"\n            // background: 'rgba(233,64,87,0.1)',\n        }\n    },\n    stepper: {\n        background: \"transparent\",\n\n        borderStyle: \"none\"\n    },\n    buttons: {\n        color: \"white\",\n        padding: \"0 30px\",\n        display: \"flex\",\n        justifyContent: \"flex-end\"\n    },\n    button: {\n        background:\n            \"linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)\",\n        marginTop: theme.spacing(3),\n        marginLeft: theme.spacing(1)\n    },\n    finalPage: {\n        minHeight: \"51vh\",\n        textAlign: \"center\",\n\n    },\n    emptyDiv: {\n        height: \"30px\"\n    }\n}));\n\n// const steps = [\"Recipe's details\", \"Ingredients\", \" Instructions\"];\n\nconst steps = [\"Recipe's details\", \"Ingredients\", \" Instructions\", \"Story\"];\n\n\nconst useColorlibStepIconStyles = makeStyles({\n    root: {\n        backgroundColor: \"#ccc\",\n        zIndex: 1,\n        color: \"#fff\",\n        width: 50,\n        height: 50,\n        display: \"flex\",\n        borderRadius: \"50%\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n    },\n    active: {\n        backgroundImage:\n            \"linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)\",\n        boxShadow: \"0 4px 10px 0 rgba(0,0,0,.25)\"\n    },\n    completed: {\n        backgroundImage:\n            \"linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)\"\n    }\n});\n\nfunction ColorlibStepIcon(props) {\n    const classes = useColorlibStepIconStyles();\n    const {active, completed} = props;\n    const icons = {\n        1: <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#FFFFFF\">\n            <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n            <path\n                d=\"M18 2.01L6 2c-1.1 0-2 .89-2 2v16c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.11-.9-1.99-2-1.99zM18 20H6v-9.02h12V20zm0-11H6V4h12v5zM8 5h2v3H8zm0 7h2v5H8z\"/>\n        </svg>\n        ,\n        2: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-egg\"\n                viewBox=\"0 0 16 16\">\n            <path\n                d=\"M8 15a5 5 0 0 1-5-5c0-1.956.69-4.286 1.742-6.12.524-.913 1.112-1.658 1.704-2.164C7.044 1.206 7.572 1 8 1c.428 0 .956.206 1.554.716.592.506 1.18 1.251 1.704 2.164C12.31 5.714 13 8.044 13 10a5 5 0 0 1-5 5zm0 1a6 6 0 0 0 6-6c0-4.314-3-10-6-10S2 5.686 2 10a6 6 0 0 0 6 6z\"/>\n        </svg>\n        ,\n        3: <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\"\n                className=\"bi bi-egg-fried\" viewBox=\"0 0 16 16\">\n            <path d=\"M8 11a3 3 0 1 0 0-6 3 3 0 0 0 0 6z\"/>\n            <path\n                d=\"M13.997 5.17a5 5 0 0 0-8.101-4.09A5 5 0 0 0 1.28 9.342a5 5 0 0 0 8.336 5.109 3.5 3.5 0 0 0 5.201-4.065 3.001 3.001 0 0 0-.822-5.216zm-1-.034a1 1 0 0 0 .668.977 2.001 2.001 0 0 1 .547 3.478 1 1 0 0 0-.341 1.113 2.5 2.5 0 0 1-3.715 2.905 1 1 0 0 0-1.262.152 4 4 0 0 1-6.67-4.087 1 1 0 0 0-.2-1 4 4 0 0 1 3.693-6.61 1 1 0 0 0 .8-.2 4 4 0 0 1 6.48 3.273z\"/>\n        </svg>,\n        4: <MenuBookIcon/>\n    };\n\n\n    return (\n        <div\n            className={clsx(classes.root, {\n                [classes.active]: active,\n                [classes.completed]: completed\n            })}\n        >\n            {icons[String(props.icon)]}\n        </div>\n    );\n}\n\nColorlibStepIcon.propTypes = {\n    /**\n     * Whether this step is active.\n     */\n    active: PropTypes.bool,\n    /**\n     * Mark the step as completed. Is passed to child components.\n     */\n    completed: PropTypes.bool,\n    /**\n     * The label displayed in the step icon.\n     */\n    icon: PropTypes.node\n};\n\n\nconst ColorlibConnector = withStyles({\n    alternativeLabel: {\n        top: 22\n    },\n    active: {\n        \"& $line\": {\n            backgroundImage:\n                \"linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)\"\n        }\n    },\n    completed: {\n        \"& $line\": {\n            backgroundImage:\n                \"linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)\"\n        }\n    },\n    line: {\n        height: 3,\n        border: 0,\n        backgroundColor: \"#ccc\",\n        borderRadius: 1\n    }\n})(StepConnector);\n\nexport const tempRecipe = new Recipe();\n\n\nexport default function AddRecipeMain() {\n    const classes = useStyles();\n    const [activeStep, setActiveStep] = useState(0);\n    const history = useHistory();\n    const {addRecipe} = useAuth();\n    let formRef = useRef(null);\n\n    function getStepContent(step) {\n\n\n        switch (step) {\n            case 0:\n                return (\n                    <RecipeDetails ref={formRef}/>\n                );\n            case 1:\n                return (\n                    <Ingredients ref={formRef}/>\n                );\n\n            case 2:\n                return (\n                    <InstructionsForm ref={formRef}/>\n\n\n                );\n            case 3:\n                return (\n                    <AddStoryRecipe ref={formRef}/>\n                )\n\n            default:\n                throw new Error(\"unknown step\")\n        }\n    }\n\n    const handleNext = () => {\n        if (activeStep < steps.length) {\n            console.log(\"formatRef\", formRef)\n            if (formRef.current.ValidBeforeNext()) {\n                console.log(\"step:\", activeStep)\n                if (activeStep === steps.length - 1) {\n                    formRef = null;\n                    setActiveStep(activeStep + 1)\n                } else {\n                    setActiveStep(activeStep + 1)\n                }\n            }\n        }\n\n    };\n\n    const handleBack = () => {\n        setActiveStep(activeStep - 1);\n    };\n    const handleStep = (step) => () => {\n        if(activeStep === steps.length) return\n        setActiveStep(step);\n    };\n\n\n    return (\n        <div className={classes.backgroundImg}>\n            <React.Fragment>\n                <CssBaseline/>\n                <main className={classes.layout}>\n                    <Paper className={classes.paper}>\n                        <Typography component=\"h1\" variant=\"h1\" align=\"center\">\n                            <p className={classes.font}> Add Recipe </p>\n                        </Typography>\n                        {/*{resetRecipe}*/}\n                        <Stepper\n                            className={classes.stepper}\n                            alternativeLabel\n                            activeStep={activeStep}\n                            connector={<ColorlibConnector/>}\n                        >\n                            {steps.map((label, index) => (\n                                <Step key={label}>\n                                    <StepButton onClick={handleStep(index)}\n                                        // completed={completed[index]}\n                                    >\n\n                                        <StepLabel StepIconComponent={ColorlibStepIcon}>\n                                            {label}\n                                        </StepLabel>\n                                    </StepButton>\n                                </Step>\n                            ))}\n                        </Stepper>\n                        <React.Fragment>\n                            {(activeStep === steps.length) ? (\n                                    //final page\n                                    <React.Fragment>\n                                        <Typography variant=\"h5\" gutterBottom align=\"center\">\n                                            The recipe was successfully added\n                                        </Typography>\n                                        <div className={classes.finalPage}>\n                                            <Typography variant=\"subtitle1\">\n                                                <h3> Thank you for BLA BLA BLA.</h3>\n                                                <div className={classes.buttons}>\n                                                    <Button onClick={handleBack} className={classes.button}>\n                                                        Back Home\n                                                    </Button>\n                                                </div>\n                                            </Typography>\n                                        </div>\n                                    </React.Fragment>\n                                )\n                                : (\n                                    <React.Fragment>\n                                        {getStepContent(activeStep)}\n                                        <div className={classes.buttons}>\n                                            {activeStep !== 0 && (\n                                                <Button\n                                                    pading=\"5\"\n                                                    onClick={handleBack}\n                                                    className={classes.button}\n                                                >Back\n                                                </Button>\n                                            )}\n                                            <Button\n                                                variant=\"contained\"\n                                                color=\"primary\"\n                                                onClick={handleNext}\n                                                className={classes.button}\n                                            >\n                                                {activeStep === steps.length - 1 ? \"Add recipe\" : \"Next\"}\n                                            </Button>\n                                        </div>\n                                    </React.Fragment>\n                                )}\n                        </React.Fragment>\n                    </Paper>\n                    {/*<Copyright/>*/}\n                </main>\n            </React.Fragment>\n        </div>\n    );\n}\n","import React from \"react\";\nimport {\n    Button,\n    Card,\n    Row,\n    Col, Alert\n} from \"react-bootstrap\";\nimport CardDeck from \"react-bootstrap/CardDeck\";\nimport Nav from \"react-bootstrap/Nav\";\nimport \"../styles/ShowRecipe.css\";\nimport {useAuth} from \"../contexts/AuthContext\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\n\n\nexport default function ShowRecipe(props) {\n    const [open, setOpen] = React.useState(false);\n    const {recipes} = useAuth();\n    const [btnMessage, setBtnMessage] = React.useState(\"Show Full Recipe\");\n    let recipeName = \"Grandma Shoshana's Challah\";\n    const author = \"Noah\"\n    const prepTime = \"1 hour\"\n    const serving = \"4 medium Challah's\"\n    const storyline1 = \"Grandma Shoshana used to make this Challah every Shabbat. It's a recipe that passes in the family. \" +\n        \"The word challah originally meant only the small portion of dough that was put in the oven when baking bread as a reminder of the destruction of the Temple in Jerusalem. \" +\n        \" It has evolved into the twisted, sweet, almost brioche-like bread that was brought to America by immigrants from Central and Eastern Europe. \" +\n        \" Although straight loaves of braided challah are eaten throughout the year, round Challahs,\" +\n        \"often studded with raisins, are served for Rosh Hashana, and also for Yom Kippur and Sukkot, the holidays celebrating the New Year and the fall harvest. \" +\n        \" Throughout the years, I have picked up tips from challah bakers throughout this country and in Europe and Israel. \" +\n        \" For example: Several risings make a better loaf, and if you want an especially brioche-like texture, let the dough rise slowly in the refrigerator for one of the three risings. \" +\n        \" The secret to a glossy loaf is to brush with an egg wash twice, once just after braiding and then again just before baking.\";\n    const allIngredients = [\n        \"1 ½ packages active dry yeast (about 3 1/2 teaspoons)\",\n        \"1 tablespoon plus 1/2 cup sugar\",\n        \"½ cup vegetable oil, more for greasing bowl\",\n        \"5 large eggs\",\n        \"1 tablespoon salt\",\n        \"8 to 8 ½ cups all-purpose flour\",\n        \"Poppy or sesame seeds for sprinkling\",\n    ];\n    const lessIngredients = allIngredients.slice(0, 3);\n    const restOfIngredients = allIngredients.slice(3);\n    const directions = [\n        \"In a large bowl, dissolve yeast and 1 tablespoon sugar in 1 3/4 cups lukewarm water.\",\n        \"Whisk oil into yeast, then beat in 4 eggs, one at a time, with remaining sugar and salt. Gradually add flour. \" +\n        \"When dough holds together, it is ready for kneading. (You can also use a mixer with a dough hook for both mixing and kneading.)\",\n        \"Turn dough onto a floured surface and knead until smooth. Clean out bowl and grease it, then return dough to bowl.\" +\n        \" Cover with plastic wrap, and let rise in a warm place for 1 hour, until almost doubled in size. \" +\n        \"Dough may also rise in an oven that has been warmed to 150 degrees then turned off. \" +\n        \"Punch down dough, cover and let rise again in a warm place for another half-hour.\",\n        \"To make a 6 braid challah, either straight or circular, take half the dough and form it into 6 balls.\" +\n        \" With your hands, roll each ball into a strand about 12 inches long and 1 1/2 inches wide.\" +\n        \" Place the 6 in a row, parallel to one another. Pinch the tops of the strands together. Move the outside right strand over 2 strands.\" +\n        \" Then take the second strand from the left and move it to the far right. Take the outside left strand and move it over 2.\" +\n        \" Move second strand from the right over to the far left. Start over with the outside right strand.\" +\n        \" Continue this until all strands are braided. For a straight loaf, tuck ends underneath. For a circular loaf, twist into a circle, pinching ends together.\" +\n        \" Make a second loaf the same way. Place braided loaves on a greased cookie sheet with at least 2 inches in between.\\n\",\n        \"Beat remaining egg and brush it on loaves. Either freeze breads or let rise another hour.\",\n        \"If baking immediately, preheat oven to 375 degrees and brush loaves again. If freezing, remove from freezer 5 hours before baking.\" +\n        \" Then dip your index finger in the egg wash, then into poppy or sesame seeds and then onto a mound of bread. Continue until bread is decorated with seeds.\",\n        \"Bake in middle of oven for 35 to 40 minutes, or until golden. Cool loaves on a rack.\"\n    ];\n\n    // function toggle() {\n    //     setOpen(!open);\n    //     if (open) {\n    //         setBtnMessage(\"Show Recipe\");\n    //     } else {\n    //         setBtnMessage(\"Show Story\");\n    //     }\n    // }\n\n    //  usage:\n    //  arrayname.map(message => (<Item key={message} message={item}/>))\n\n    const useStyles = makeStyles({\n        root: {\n            maxWidth: 345,\n        },\n        media: {\n            height: 250,\n            width:500\n        },\n    });\n\n    function Item(props) {\n        return <li>{props.message}</li>;\n    }\n\n    function DefaultRecipe() {\n        const recipe = props.location.recipe\n        const classes = useStyles();\n\n        return (\n            <Card className=\"colored-background\">\n                <div className=\"showrecipe\">\n                    {/*<h3 style={{ padding: \"10px\" }}>\n            Grandma Shoshana's Indian Curry Recipe\n          </h3>*/}\n                    <Card className=\"recipecard\">\n                        <Card.Header>\n                            <Nav variant=\"tabs\" defaultActiveKey=\"/showrecipe\">\n                                <Nav.Item>\n                                    <Nav.Link href=\"/showstory\">Story</Nav.Link>\n                                </Nav.Item>\n                                <Nav.Item>\n                                    <Nav.Link href=\"/showrecipe\">Recipe</Nav.Link>\n                                </Nav.Item>\n                            </Nav>\n                        </Card.Header>\n                        <Card>\n                            <Col>\n                                <Row>\n                                    <h1>{recipe.name || recipeName}</h1>\n                                </Row>\n                                <Row>\n                                    <Col>\n                                        <h3>By: {recipe.author || author} </h3>\n                                    </Col>\n                                    <Col>\n                                        <h3> Servings: {recipe.serving || serving} </h3>\n                                    </Col>\n                                    <Col>\n                                        <h3>Preparation Time: {recipe.prepTime || prepTime}</h3>\n                                    </Col>\n                                </Row>\n                            </Col>\n                        </Card>\n                        <CardDeck>\n                            <Card>\n                                <Card.Body>\n                                    <h4>Ingredients:</h4>\n                                    <ul className=\"show_ingredients\">\n                                        {recipe.IngredientsList.map(message => (\n                                            <Item key={message} message={message}/>\n                                        ))}\n                                        {/*{restOfIngredients.map(message => (*/}\n                                        {/*    <Item key={message} message={message}/>*/}\n                                        {/*))}*/}\n                                    </ul>\n                                </Card.Body>\n                                {/*<CardMedia*/}\n                                {/*    className={classes.media}*/}\n                                {/*    image={recipe.getMainImage() || \"https://cdn.glitch.com/0b57df91-f600-46a4-956b-70a322817e9a%2Frebecca-matthews-yjWNJRwt8mc-unsplash.jpg?v=1619471178279\"}*/}\n                                {/*    title=\"Contemplative Reptile\"*/}\n                                {/*/>*/}\n                                <Card.Img\n                                className=\"Head_Picture_Story\"\n                                    variant=\"top\"\n                                    fluid=\"false\"\n                                    src={recipe.getMainImage() || \"https://cdn.glitch.com/0b57df91-f600-46a4-956b-70a322817e9a%2Frebecca-matthews-yjWNJRwt8mc-unsplash.jpg?v=1619471178279\"}\n                                />\n                            </Card>\n                            <Card>\n                                <h5>Instructions:</h5>\n                                <ol className=\"show_instruction\">\n                                    {recipe.instructionDetails.map(message => (\n                                        <Item key={message} message={message}/>\n                                    ))}\n                                </ol>\n                                <Card.Body>\n                                    <Button variant=\"outline-success\">Edit Recipe</Button>\n                                </Card.Body>\n                            </Card>\n                        </CardDeck>\n                        <CardDeck className=\"Tags\">\n                            <Card.Header>\n                                Tags:\n                            </Card.Header>\n                            <Card>\n                                <t1>Bread</t1>\n                            </Card>\n                            <Card>\n                                <t1>Shabbat</t1>\n                            </Card>\n                            <Card>\n                                <t1>with eggs</t1>\n                            </Card>\n                        </CardDeck>\n                    </Card>\n                </div>\n            </Card>\n        )\n    }\n\n\n    return (\n        <div className=\"outer_div\">\n            {!props.id && <DefaultRecipe/>}\n            {props.id && recipes && recipes.length <= props.id &&\n            <Alert variant=\"danger\">Error: recipe does not exist!</Alert>}\n            {props.id && recipes.length > props.id &&\n            <Card className=\"colored-background\">\n                <div className=\"showrecipe\">\n                    <Card className=\"recipecard\">\n                        <Card.Header>\n                            <Nav variant=\"tabs\" defaultActiveKey=\"/showrecipe\">\n                                <Nav.Item>\n                                    <Nav.Link href=\"/showstory\">Story</Nav.Link>\n                                </Nav.Item>\n                                <Nav.Item>\n                                    <Nav.Link href=\"/showrecipe\">Recipe</Nav.Link>\n                                </Nav.Item>\n                            </Nav>\n                        </Card.Header>\n                        <Card>\n                            <Col>\n                                <Row>\n                                    <h1>{recipes[props.id].name}</h1>\n                                </Row>\n                                <Row>\n                                    <Col>\n                                        <h3>By: {recipes[props.id].author} </h3>\n                                    </Col>\n                                    <Col>\n                                        <h3> Servings: {recipes[props.id].serving} </h3>\n                                    </Col>\n                                    <Col>\n                                        <h3>Preparation Time: {recipes[props.id].prepTime}</h3>\n                                    </Col>\n                                </Row>\n                            </Col>\n                        </Card>\n                        <CardDeck>\n                            <Card>\n                                <Card.Body>\n                                    <h4>Ingredients:</h4>\n                                    <ul className=\"show_ingredients\">\n                                        {recipes.IngredientsList.map(message => (\n                                            <Item key={message} message={message}/>\n                                            ))\n                                        // ||\n                                        //     [props.id].IngredientsList.map(message => (\n                                        //     <Item key={message} message={message}/>\n                                        // ))\n                                        }\n                                    </ul>\n                                </Card.Body>\n                                <Card.Img\n                                    className=\"Head_Picture_Story\"\n                                    variant=\"top\"\n                                    fluid=\"false\"\n                                    src=\"https://cdn.glitch.com/0b57df91-f600-46a4-956b-70a322817e9a%2Frebecca-matthews-yjWNJRwt8mc-unsplash.jpg?v=1619471178279\"\n                                />\n                            </Card>\n                            <Card>\n                                <h5>Instructions:</h5>\n                                <ol className=\"show_instruction\">\n                                    {recipes[props.id].instructionDetails.map(message => (\n                                        <Item key={message} message={message}/>\n                                    ))}\n                                </ol>\n                                <Card.Body>\n                                    <Button variant=\"outline-success\">Edit Recipe</Button>\n                                </Card.Body>\n                            </Card>\n                        </CardDeck>\n                        <CardDeck className=\"Tags\">\n                            <Card.Header>\n                                Tags:\n                            </Card.Header>\n                            <Card>\n                                <t1>Bread</t1>\n                            </Card>\n                            <Card>\n                                <t1>Shabbat</t1>\n                            </Card>\n                            <Card>\n                                <t1>with eggs</t1>\n                            </Card>\n                        </CardDeck>\n                    </Card>\n                </div>\n            </Card>\n            }\n        </div>\n    );\n}","import React from \"react\";\nimport {\n    // Form,\n    // Button,\n    Card,\n    // Container,\n    // Collapse,\n    Row,\n    // Col\n} from \"react-bootstrap\";\nimport CardDeck from \"react-bootstrap/CardDeck\";\nimport Nav from \"react-bootstrap/Nav\";\n// import Tabs from \"react-bootstrap/Tabs\";\nimport \"../styles/ShowRecipe.css\";\n\n\nexport default function ShowRecipe() {\n    const [open, setOpen] = React.useState(false);\n    const [btnMessage, setBtnMessage] = React.useState(\"Show Full Recipe\");\n    const recipeName = \"Grandma Shoshana's Challah\";\n    const storyline1 = \"Grandma Shoshana used to make this Challah every Shabbat. It's a recipe that passes in the family. \" +\n        \"The word challah originally meant only the small portion of dough that was put in the oven when baking bread as a reminder of the destruction of the Temple in Jerusalem. \" +\n        \" It has evolved into the twisted, sweet, almost brioche-like bread that was brought to America by immigrants from Central and Eastern Europe. \" +\n        \" Although straight loaves of braided challah are eaten throughout the year, round Challahs,\" +\n        \"often studded with raisins, are served for Rosh Hashana, and also for Yom Kippur and Sukkot, the holidays celebrating the New Year and the fall harvest. \" +\n        \" Throughout the years, I have picked up tips from challah bakers throughout this country and in Europe and Israel. \" +\n        \" For example: Several risings make a better loaf, and if you want an especially brioche-like texture, let the dough rise slowly in the refrigerator for one of the three risings. \" +\n        \" The secret to a glossy loaf is to brush with an egg wash twice, once just after braiding and then again just before baking.\";\n    const Pictures = [\n        \"https://cdn.glitch.com/0b57df91-f600-46a4-956b-70a322817e9a%2Fannie-spratt-Ar9j8V6oMzo-unsplash.jpg?v=1619471229273\",\n        \"https://cdn.glitch.com/0b57df91-f600-46a4-956b-70a322817e9a%2Flaura-fuhrman-73OJLcahQHg-unsplash.jpg?v=1619471222651\",\n        \"https://cdn.glitch.com/0b57df91-f600-46a4-956b-70a322817e9a%2Fnathon-oski-KxqXpxxodfI-unsplash.jpg?v=1619471199809\",\n        \"https://cdn.glitch.com/0b57df91-f600-46a4-956b-70a322817e9a%2Fchristian-bowen-TOKVE7PNwAc-unsplash.jpg?v=1619471234104\",\n        \"https://cdn.glitch.com/0b57df91-f600-46a4-956b-70a322817e9a%2Felement5-digital-h5rgWo1_F_U-unsplash.jpg?v=1619471222651\",\n    ];\n    const Picture_Titles = [\n        \"Grandma Shoshana as a little kid\",\n        \"Grandma Shoshana's Family Album\",\n        \"Use a knife to carve the Shape\",\n        \"Grandma Shoshana and little Hannah making a Challah together\",\n    ];\n    const Picture_description = [\n        \"Standing from right to left: Bobby, Abby, Shoshana,Carl, Danny, Emma, Flora ,George, Hannah, Iris, Jhon.\",\n        \"On the left: Abby and Shoshana.\",\n    ];\n\n    function toggle() {\n        setOpen(!open);\n        if (open) {\n            setBtnMessage(\"Show Recipe\");\n        } else {\n            setBtnMessage(\"Show Story\");\n        }\n    }\n\n    // function Item(props) {\n    //     return <li>{props.message}</li>;\n    // }\n\n    return (\n        <div className=\"outer_div\">\n            <Card className=\"colored-background\">\n                <div className=\"showrecipe\">\n                    {/*<h3 style={{ padding: \"10px\" }}>\n            Grandma Shoshana's Indian Curry Recipe\n          </h3>*/}\n                    <Card className=\"storycard\">\n                        <Card.Header>\n                            <Nav variant=\"tabs\" defaultActiveKey=\"/ShowStory\">\n                                <Nav.Item>\n                                    <Nav.Link href=\"/ShowStory\">Story</Nav.Link>\n                                </Nav.Item>\n                                <Nav.Item>\n                                    <Nav.Link href=\"/showrecipe\">Recipe</Nav.Link>\n                                </Nav.Item>\n                            </Nav>\n                        </Card.Header>\n                        <h1>{recipeName}</h1>\n                        <Card.Img\n                            className=\"Head_Picture_Story\"\n                            variant=\"top\"\n                            fluid=\"true\"\n                            src=\"https://cdn.glitch.com/0b57df91-f600-46a4-956b-70a322817e9a%2Frebecca-matthews-yjWNJRwt8mc-unsplash.jpg?v=1619471178279\"\n                        />\n                        <Card.Body>\n                            <Row>\n                                <t1 className= 'storyText'>{storyline1}</t1>\n                            </Row>\n                            <Row>\n                                <CardDeck>\n                                    <Card>\n                                        <Card.Img\n                                            className=\"small_pic\"\n                                            variant=\"top\"\n                                            src={Pictures[0]}\n                                        />\n                                        <Card.Body>\n                                            <Card.Title>{Picture_Titles[0]}</Card.Title>\n                                            <Card.Text>\n                                                {Picture_description[0]}\n                                            </Card.Text>\n                                        </Card.Body>\n                                    </Card>\n                                    <Card>\n                                        <Card.Img\n                                            className=\"small_pic\"\n                                            variant=\"top\"\n                                            src={Pictures[1]}\n                                        />\n                                        <Card.Body>\n                                            <Card.Title>{Picture_Titles[1]}</Card.Title>\n                                            <Card.Text>\n                                                {Picture_description[1]}\n                                            </Card.Text>\n                                        </Card.Body>\n                                    </Card>\n                                    <Card>\n                                        <Card.Img\n                                            className=\"small_pic\"\n                                            variant=\"top\"\n                                            src={Pictures[2]}\n                                        />\n                                        <Card.Body>\n                                            <Card.Title>{Picture_Titles[2]}</Card.Title>\n                                        </Card.Body>\n                                    </Card>\n                                    <Card>\n                                        <Card.Img\n                                            className=\"small_pic\"\n                                            variant=\"top\"\n                                            src={Pictures[3]}\n                                        />\n                                        <Card.Body>\n                                            <Card.Title>{Picture_Titles[3]}</Card.Title>\n                                        </Card.Body>\n                                    </Card>\n                                    <Card>\n                                        <Card.Img\n                                            className=\"small_pic\"\n                                            variant=\"top\"\n                                            src={Pictures[4]}\n                                        />\n                                    </Card>\n                                </CardDeck>\n                            </Row>\n                        </Card.Body>\n                    </Card>\n                    {/*<Card>\n                        <h5>Comments</h5>\n                        <Row>\n                            <Col className= 'commenter'>\n                                <t1>Tal</t1>\n                            </Col>\n                            <Col className='comment'>\n                                <t1>I love this recipe!</t1>\n                            </Col>\n                        </Row>\n                    </Card>*/}\n                </div>\n            </Card>\n        </div>\n    );\n}","import {WhatsappIcon, WhatsappShareButton} from \"react-share\";\r\n\r\nfunction WhatsAppShare(GroupCode) {\r\n    return (<div>\r\n            <WhatsappShareButton\r\n                title=\"Family Share\"\r\n                url={\"GroupCode\" + GroupCode}\r\n            >\r\n                <WhatsappIcon size={64} round/>\r\n            </WhatsappShareButton>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WhatsAppShare\r\n","import React, {useEffect} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.background.paper,\n    }, nested: {\n        paddingLeft: theme.spacing(2),\n    },\n}));\n\nexport default function CheckboxListSecondary(props) {\n\n    const classes = useStyles();\n    const [checked, setChecked] = React.useState([1]);\n    const values = props.values\n\n    useEffect(()=>{\n        console.log(\"value\",Object.keys(values))\n    },[values])\n    const handleToggle = (value) => () => {\n        const currentIndex = checked.indexOf(value);\n        console.log(\"newChecked\",checked)\n\n        const newChecked = [...checked];\n        if (currentIndex === -1) {\n            newChecked.push(value);\n            props.clickChange(props.stateNum, value)\n\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n        setChecked(newChecked);\n        console.log(\"check\", newChecked)\n        props.handlefilter();\n    }\n    return (\n        <List dense className={classes.root}>\n            {Object.keys(values).map((value) => {\n                const labelId = `checkbox-list-secondary-label-${value}`;\n                return (\n                    <ListItem key={value} button className={classes.nested}>\n                        {/*<ListItemIcon>*/}\n                        {/*    maybe avatars in case of users?*/}\n                        <span className=\"badge badge-primary badge-pill\"\n                              style={{\n                                  background: \"#269026\",\n                                  fontSize: \"12px\"\n                              }}>{5}</span>\n                        {/*</ListItemIcon>*/}\n                        &nbsp;\n                        <ListItemText id={labelId} primary={`${value}`}/>\n                        <ListItemSecondaryAction>\n                            <Checkbox\n                                edge=\"end\"\n                                checked={checked.indexOf(value) !== -1 }\n                                onChange={handleToggle(value)}\n                                handlefilter={props.handlefilter}\n                                inputProps={{'aria-labelledby': labelId}}\n                            />\n                        </ListItemSecondaryAction>\n                    </ListItem>\n                );\n            })}\n        </List>\n    );\n}\n","import React, {useEffect} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport CheckboxListSecondary from \"./checkBox\";\nimport {AllFiltersOption} from \"../addRecipe/Recipe\"\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport Checkbox from '@material-ui/core/Checkbox';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.background.paper,\n    },\n    nested: {\n        paddingLeft: theme.spacing(3),\n    },\n}));\n\n\nexport default function FilterList(props) {\n    const classes = useStyles();\n    const change = props.clickChange\n    const handleFilter = props.handleFilter;\n\n\n    function DropDown(props) {\n        const [open, setOpen] = React.useState(true);\n        const handleClick = () => {\n            setOpen(!open);\n        };\n        return (\n            <>\n                <ListItem button onClick={handleClick}>\n                    <ListItemText primary={props.text}/>\n                    {open ? <ExpandLess/> : <ExpandMore/>}\n                </ListItem>\n                <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                    <List component=\"div\" disablePadding>\n                        <CheckboxListSecondary\n                            stateNum={props.stateNum} values={props.values} clickChange={change}\n                            handlefilter={handleFilter}\n                        />\n                    </List>\n                </Collapse>\n            </>\n        )\n    }\n\n\n    //DishesView => FilterList => DropDown => checkBox\n    return (\n        <List\n            component=\"nav\"\n            aria-labelledby=\"nested-list-subheader\"\n            className={classes.root}>\n            <DropDown text={\"Categories\"} stateNum={1} values={props.foodValues}/>\n            <DropDown text={\"Diets\"} stateNum={2} values={props.dietValues}/>\n            {/*<DropDown text={\"Users\"} stateNum={2} values={users} clickChange={props.clickChange}/>*/}\n        </List>\n    );\n}\n","import React from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport MenuBookIcon from \"@material-ui/icons/MenuBook\";\nimport {Image} from \"react-bootstrap\";\nimport {Grid} from \"@material-ui/core\";\n\nconst styles = (theme) => ({\n    root: {\n        margin: 0,\n        padding: theme.spacing(2),\n    },\n    closeButton: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: theme.palette.grey[500],\n    },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n    const {children, classes, onClose, ...other} = props;\n    return (\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\n            <Typography variant=\"h6\">{children}</Typography>\n            {onClose ? (\n                <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n                    <CloseIcon/>\n                </IconButton>\n            ) : null}\n        </MuiDialogTitle>\n    );\n});\n\nconst DialogContent = withStyles((theme) => ({\n    root: {\n        padding: theme.spacing(2),\n    },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n    root: {\n        margin: 0,\n        padding: theme.spacing(1),\n    },\n}))(MuiDialogActions);\n\nexport default function StoryDialog(props) {\n    const [open, setOpen] = React.useState(false);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <div>\n            <Button size=\"small\" color=\"secondary\" variant=\"outlined\"  onClick={handleClickOpen}>\n                <b>Story&nbsp;&nbsp;</b>\n                <MenuBookIcon />\n            </Button>\n            <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n                <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n                    The story of the plate:\n                </DialogTitle>\n                <DialogContent dividers>\n                    <Grid container xs={12} spacing={30}>\n                        <Grid item xs={4}>\n                            <br/><br/><br/><br/><br/>\n                            <Typography gutterBottom style={{fontSize: \"2em\"}}>\n                                {props.title}\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={2}/>\n                        <Grid item xs={4}>\n\n                            <Image className=\"img-thumbnail\"\n                                   style={{maxHeight: \"250px\", alignContent: \"center\"}}\n                                   src={props.img}\n                                   alt=\"family's img\"/>\n                        </Grid>\n                    </Grid>\n                    <br/><br/>\n                    <Typography  style={{padding:\"12px\"}} gutterBottom>\n                        {props.text}\n                    </Typography>\n\n                </DialogContent>\n                <DialogActions>\n                    <Button autoFocus onClick={handleClose} color=\"primary\">\n                        Back\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport StoryDialog from './StoryDialog'\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        maxWidth: 345,\r\n        backgroundColor: \"transparent\"\r\n    },\r\n    media: {\r\n        height: 240,\r\n        borderRadius: \"12%\",\r\n        textAlign: \"center\"\r\n    },\r\n});\r\n\r\nexport default function MediaCard(props) {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <Card className={classes.root} onClick={() => history.push({\r\n            pathname: \"/showrecipe\",\r\n            author: props.author,\r\n            recipe: props.recipe,\r\n        })\r\n        }>\r\n            <CardActionArea>\r\n                <CardMedia\r\n                    className={classes.media}\r\n                    image={props.img}\r\n                    title={props.title}\r\n                />\r\n\r\n                <Typography gutterBottom variant=\"h5\" component=\"h4\">\r\n                    {props.title}\r\n                </Typography>\r\n                <Typography gutterBottom style={{fontSize: \"1em\"}} variant=\"h6\" component=\"h5\">\r\n                    {props.author}\r\n                </Typography>\r\n            </CardActionArea>\r\n            <CardActions>\r\n                <StoryDialog title={props.title} text={props.text} img={props.img}/>\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n}\r\n\r\n","import React, {useCallback, useEffect, useState} from \"react\";\nimport \"./familyPage.css\";\nimport FilterList from \"./FilterList\";\nimport filterOptions, {AllFiltersOption} from \"../addRecipe/Recipe\"\nimport {useAuth} from \"../contexts/AuthContext\";\nimport {tempRecipe} from \"../addRecipe/addRecipeMain\";\nimport withWidth, {isWidthUp} from \"@material-ui/core/withWidth\";\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport MediaCard from \"./mediaCard\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        zoom: \"100%\",\n        justifyContent: 'space-around',\n        overflow: 'hidden',\n        background: \"none\",\n    },\n    gridList: {\n        width: \"auto\",\n        height: \"auto\"\n    }\n}));\n\nconst States = {\n    FoodType: 1,\n    DIET: 2\n}\n\nfunction GetRecipes() {\n    const {recipes} = useAuth();\n    // if (typeof recipes === 'undefined') return [];\n    return {recipes};\n}\n\nexport default function DishesView() {\n    const classes = useStyles();\n    const [AllRecipes, setAllRecipes] = useState(GetRecipes().recipes);\n    const [curRecipes, setCurRecipes] = useState(GetRecipes().recipes);\n    const [foodTypeMap, setFoodTypeMap] = useState(createFoodTypeMap()); // {Salads, pies, Chines}\n    const [dietFiltersMap, SetDietFiltersMap] = useState(CreateDietTypeMap()); // { kosher, vegan}\n\n\n    // const [holidays, setHolidays] = useState(CreateMap(holidayOption));\n//TODO: get users list from firebase\n    // const [authors, setAuthors] = useState(); //get from FB\n\n\n    function createFoodTypeMap() {\n        const filtersMap = {}\n        AllFiltersOption.getFoodTypes().forEach((f) => filtersMap[f] = false)\n        return filtersMap;\n    }\n\n    function CreateDietTypeMap() {\n        const dietMap = {}\n        AllFiltersOption.getDietFilters().forEach((f) => dietMap[f] = false);\n        return dietMap;\n    }\n\n    const filterRecipeByDiet = (recipe) => {\n        let recipeFilterDiet = recipe.getFilters();\n        console.log(\"recipeFilterDiet\", recipeFilterDiet)\n        for (const filter of recipeFilterDiet) {\n            if (dietFiltersMap[filter] !== false) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n\n    // const handleFilter = useCallback(()=>{\n    //     console.log(\"lolog!!\")\n    //\n    //     let foodTypeList = Object.fromEntries(Object.entries(foodTypeMap).filter(([k, v]) => foodTypeMap[k] === true));\n    //     let dietFilter = Object.fromEntries(Object.entries(dietFiltersMap).filter(([k, v]) => dietFiltersMap[k] === true));\n    //     let numOfFootTypeFilter = Object.keys(foodTypeList).length;\n    //     let numOfDietFilter = Object.keys(dietFilter).length;\n    //     console.log(\"numOfDietFilter!!\", numOfDietFilter)\n    //\n    //     if (numOfFootTypeFilter === 0 && numOfDietFilter === 0) {\n    //         setCurRecipes(AllRecipes)\n    //         return;\n    //     }\n    //\n    //     let tempList = [];\n    //     if (numOfFootTypeFilter === 0) {\n    //         AllRecipes.forEach((recipe) => {\n    //             tempList.push(recipe)\n    //         })\n    //     } else {\n    //         AllRecipes.forEach((recipe) => {\n    //             let category = recipe.getCategory();\n    //             if (foodTypeMap[category] === true) {\n    //                 tempList.push(recipe)\n    //             }\n    //         })\n    //     }\n    //     console.log(\"tempDataAfterDiet!!\", tempList)\n    //\n    //     let tempDataAfterDiet = []\n    //     if (numOfDietFilter === 0) {\n    //         tempDataAfterDiet = tempList\n    //         console.log(\"0\", tempDataAfterDiet)\n    //\n    //     } else {\n    //         tempList.forEach((recipe) => {\n    //             let recipeFilterDiet = recipe.getFilters();\n    //             for (const filter of recipeFilterDiet) {\n    //                 if (dietFiltersMap[filter] !== false){\n    //                     tempDataAfterDiet.push(recipe);\n    //                     break;\n    //                 }\n    //             }\n    //             })\n    //     }\n    //     console.log(\"end\", tempDataAfterDiet)\n    //     setCurRecipes(tempDataAfterDiet)\n    //\n    // },[AllRecipes,dietFiltersMap,foodTypeMap])\n\n    function handleFilter() {\n        console.log(\"lolog!!\")\n        let foodTypeList = Object.fromEntries(Object.entries(foodTypeMap).filter(([k, v]) => foodTypeMap[k] === true));\n        let dietFilter = Object.fromEntries(Object.entries(dietFiltersMap).filter(([k, v]) => dietFiltersMap[k] === true));\n        let numOfFootTypeFilter = Object.keys(foodTypeList).length;\n        let numOfDietFilter = Object.keys(dietFilter).length;\n        console.log(\"numOfDietFilter!!\", numOfDietFilter)\n        if (numOfFootTypeFilter === 0 && numOfDietFilter === 0) {\n            setCurRecipes(AllRecipes)\n            return;\n        }\n\n        let tempList = [];\n        if (numOfFootTypeFilter === 0) {\n            AllRecipes.forEach((recipe) => {\n                tempList.push(recipe)\n            })\n        } else {\n            AllRecipes.forEach((recipe) => {\n                let category = recipe.getCategory();\n                if (foodTypeMap[category] === true) {\n                    tempList.push(recipe)\n                }\n            })\n        }\n        console.log(\"tempDataAfterDiet!!\", tempList)\n\n        let tempDataAfterDiet = []\n        if (numOfDietFilter === 0) {\n            tempDataAfterDiet = tempList\n            console.log(\"0\", tempDataAfterDiet)\n\n        } else {\n            tempList.forEach((recipe) => {\n                let recipeFilterDiet = recipe.getFilters();\n                for (const filter of recipeFilterDiet) {\n                    if (dietFiltersMap[filter] !== false) {\n                        tempDataAfterDiet.push(recipe);\n                        break;\n                    }\n                }\n            })\n        }\n        console.log(\"end\", tempDataAfterDiet);\n        setCurRecipes(tempDataAfterDiet);\n\n    }\n\n    useEffect(() => {\n        console.log(\"CC!!\", curRecipes)\n    }, [curRecipes]);\n\n    function onClickChange(state, value) {\n        console.log(state)\n        switch (state) {\n            case States.FoodType:\n                let tempMapFood = foodTypeMap;\n                tempMapFood[value] = !tempMapFood[value]\n                setFoodTypeMap(tempMapFood)\n                break;\n            case States.DIET:\n                let tempDietMap = dietFiltersMap;\n                tempDietMap[value] = !tempDietMap[value]\n                SetDietFiltersMap(tempDietMap)\n                console.log(\"tempDietMap!!\", dietFiltersMap)\n                break;\n            // case States.HOLIDAY:\n            //     holidays[value] = !holidays[value];\n            //     break;\n\n            // case States.AUTHOR:\n            //     break;\n            // default:\n            // return;\n        }\n    }\n\n\n//TITLEBARGRIDLIST\n    const getGridListCols = () => {\n        if (isWidthUp('md', curRecipes.width)) {\n            return 3;\n        }\n        return 2;\n    }\n\n    if (curRecipes.length < 0) {\n        return (\n            <div>\n                <div className=\"recipes\">\n                    <h1>\n                        Empty for now. add a recipe!\n                    </h1></div>\n                <div className=\"filters\">\n                    <FilterList clickChange={onClickChange}\n                                handleFilter={handleFilter}\n                                curRecpies={curRecipes}/>\n                </div>\n            </div>\n        );\n    } else {\n        console.log(\"not empty\")\n        return (\n            <div className=\"recipes\">\n                <div className={classes.root}>\n                    <h1>\n                        not empty!\n                    </h1>\n                    <GridList spacing={70} cellWidth={getGridListCols() * 100} cellHeight={\"auto\"}\n                              cols={getGridListCols()}>\n                        {curRecipes.map((tile) => (\n                            <div>\n                                <GridListTile>\n                                    <MediaCard\n                                        author={tile.getAuthor()}\n                                        img={tile.getMainImage() || 'https://ifoodreal.com/wp-content/uploads/2018/12/FG-healthy-spinach-salad-recipe.jpg'}\n                                        title={tile.getName()}\n                                    />\n                                </GridListTile>\n                            </div>\n                        ))}\n                    </GridList>\n                </div>\n                <div className=\"filters\">\n                    {/*{<FilterList clickChange={onClickChange}*/}\n                    {/*             handleFilter={handleFilter}*/}\n                    {/*             foodValues={foodTypeMap}*/}\n                    {/*             dietValues={dietFiltersMap}*/}\n                    {/*/>}*/}\n                </div>\n            </div>)\n    }\n}\n\n// {9GXI06CmcleSUEE5k2m7AD9upFP2}\n// export default withWidth()(TitleBarGridList);\n\n\n//\n//\n//     /**\n//\n//\n// {/*{alldishes.map((tile) => (*/}\n{/*    <div>*/\n}\n{/*    <GridListTile>*/\n}\n{/*        <MediaCard*/\n}\n{/*            author={tile.getAuthor()}*/\n}\n{/*            img='https://ifoodreal.com/wp-content/uploads/2018/12/FG-healthy-spinach-salad-recipe.jpg'*/\n}\n{/*            title={tile.getName()}*/\n}\n{/*        />*/\n}\n{/*    </GridListTile>*/\n}\n{/*    </div>*/\n}\n{/*))}*/\n}\n\n{/*9GXI06CmcleSUEE5k2m7AD9upFP2*/\n}\n\n//\n//     salads : true\n//      Pie : true\n//      :false\n//      ....\n//      false;\n//\n// }\n//\n// //Returns true if checkBox is empty\n// function isAllFalse(map) {\n//     for (let val of map.values()) {\n//         if (val) return false;\n//     }\n//     return true;\n// }\n\n//check diet filters\n// function checkDietFilters(dietFilters, recipeDietFilters) {\n//\n//     for (let key of dietFilters.keys()) {\n//         if (dietFilters[key] && !recipeDietFilters[key]) return false;\n//     }\n//     return true;\n// }\n","import React, {useState} from 'react'\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\r\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport List from \"@material-ui/core/List\";\r\n\r\n// const {Panel} = Collapse\r\n\r\n\r\nfunction CheckBox2(props) {\r\n\r\n    const [Checked, setChecked] = useState([])\r\n    const [CheckedDiet, setCheckedDiet] = useState([])\r\n    const [open, setOpen] = React.useState(true);\r\n    const [open2, setOpen2] = React.useState(true);\r\n\r\n\r\n    const handleToggle = (value, type) => {\r\n\r\n        const currentIndex = Checked.indexOf(value);\r\n        const newChecked = [...Checked];\r\n\r\n        if (currentIndex === -1) {\r\n            newChecked.push(value)\r\n        } else {\r\n            newChecked.splice(currentIndex, 1)\r\n        }\r\n        setChecked(newChecked)\r\n        props.handleFilters(newChecked, type)\r\n        //update this checked information into Parent Component\r\n    }\r\n\r\n    const handleToggle2 = (value, type) => {\r\n\r\n        const currentIndex = CheckedDiet.indexOf(value);\r\n        const newCheckedDiet = [...CheckedDiet];\r\n\r\n        if (currentIndex === -1) {\r\n            newCheckedDiet.push(value)\r\n        } else {\r\n            newCheckedDiet.splice(currentIndex, 1)\r\n        }\r\n        setCheckedDiet(newCheckedDiet)\r\n        props.handleFilters(newCheckedDiet, type)\r\n        //update this checked information into Parent Component\r\n    }\r\n\r\n\r\n    const renderCheckboxLists = (type) => props.FoodTypeCatList && props.FoodTypeCatList.map((value, index) => (\r\n        <React.Fragment key={index}>\r\n            <Checkbox\r\n                onChange={() => handleToggle(value._id, type)}\r\n                type=\"checkbox\"\r\n                checked={Checked.indexOf(value._id) !== -1}\r\n            />&nbsp;&nbsp;\r\n            <span>{value.name}</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n        </React.Fragment>\r\n    ))\r\n    const renderCheckboxLists2 = (type) => props.DietList && props.DietList.map((value, index) => (\r\n        <React.Fragment key={index}>\r\n            <Checkbox\r\n                onChange={() => handleToggle2(value._id, type)}\r\n                type=\"checkbox\"\r\n                checked={CheckedDiet.indexOf(value._id) !== -1}\r\n            />&nbsp;&nbsp;\r\n            <span>{value.name}</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n        </React.Fragment>\r\n    ))\r\n\r\n    return (\r\n        <div>\r\n            {/*<Collapse defaultActiveKey={['0']} >*/}\r\n            {/*<Panel header=\"Food Type\" key=\"1\"/>*/}\r\n            <ListItem button onClick={() => {\r\n                setOpen(!open);\r\n            }}>\r\n                <ListItemText primary={\"Food Type:\"}/>\r\n                {open ? <ExpandLess/> : <ExpandMore/>}\r\n            </ListItem>\r\n            <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n                <List component=\"div\" disablePadding>\r\n            {renderCheckboxLists(\"FoodCategoryFilter\")}\r\n                </List>\r\n            </Collapse>\r\n            <ListItem button onClick={() => {\r\n                setOpen2(!open2);\r\n            }}>\r\n                <ListItemText primary={\"Diet Filter\"}/>\r\n                {open2 ? <ExpandLess/> : <ExpandMore/>}\r\n            </ListItem>\r\n            <Collapse in={open2} timeout=\"auto\" unmountOnExit>\r\n                <List component=\"div\" disablePadding>\r\n                    {renderCheckboxLists2(\"DietFilter\")}\r\n                </List>\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CheckBox2\r\n","import {makeStyles} from \"@material-ui/core/styles\";\r\nimport {useAuth} from \"../contexts/AuthContext\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport GridList from \"@material-ui/core/GridList\";\r\nimport GridListTile from \"@material-ui/core/GridListTile\";\r\nimport MediaCard from \"./mediaCard\";\r\nimport {isWidthUp} from \"@material-ui/core/withWidth\";\r\nimport CheckBox2 from \"./CheckBox2\";\r\nimport {AllFiltersOption, categoryOption, dietOption} from \"../addRecipe/Recipe\";\r\nimport \"./familyPage.css\";\r\n\r\nimport FilterList from \"./FilterList\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\r\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport List from \"@material-ui/core/List\";\r\nimport CheckboxListSecondary from \"./checkBox\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        zoom: \"100%\",\r\n        justifyContent: 'space-around',\r\n        overflow: 'hidden',\r\n        background: \"none\",\r\n    },\r\n    gridList: {\r\n        width: \"auto\",\r\n        height: \"auto\"\r\n    }\r\n}));\r\n\r\nconst FilterOptionStates = {\r\n    1: \"FoodCategoryFilter\",\r\n    2: \"DietFilter\",\r\n}\r\n\r\nfunction GetRecipes() {\r\n    const {recipes} = useAuth();\r\n    // if (typeof recipes === 'undefined') return [];\r\n    return {recipes}.recipes;\r\n}\r\n\r\n\r\nexport default function DishesView2(props) {\r\n    const classes = useStyles();\r\n    const AllRecipes = GetRecipes();\r\n    const [curRecipes, setCurRecipes] = useState(GetRecipes());\r\n    const [Filters, setFilters] = useState({\r\n        FoodCategoryFilter: [],\r\n        DietFilter: []\r\n    })\r\n\r\n    const getGridListCols = () => {\r\n        if (isWidthUp('md', props.width)) {\r\n            return 3;\r\n        }\r\n        return 2;\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(\"CC!!\", curRecipes)\r\n    }, [curRecipes]);\r\n    const handleFilters = (filters, category) => {\r\n\r\n        const newFilters = {...Filters}\r\n        newFilters[category] = filters\r\n        //        newFilters[FoodCategory] = [Salades, Pies, Others]\r\n\r\n        if (category === FilterOptionStates[\"1\"]) {\r\n            updateRecipesForFoodType(newFilters)\r\n        }\r\n        if (category === FilterOptionStates[\"2\"]) {\r\n            updateRecipesForDiet(newFilters)\r\n        }\r\n        setFilters(newFilters)\r\n\r\n    }\r\n    const dietFilterCheck = (recipe, newFilter) => {\r\n        let DietList = newFilter[FilterOptionStates[\"2\"]];\r\n        const list = AllFiltersOption.getDietFilters();\r\n\r\n        if (!DietList || DietList.length === 0) {\r\n            return true\r\n        }\r\n        let filtersArr = recipe.getFilters()\r\n        for (let i=0; i<DietList.length;i++) {\r\n            if (!filtersArr.includes(list[DietList[i]-100].name)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    const FoodTypeCheck = (recipe, newFilters) => {\r\n        let foodTypeList = newFilters[FilterOptionStates[\"1\"]]\r\n        if (foodTypeList.length === 0) {\r\n            return true;\r\n        }\r\n        let list = AllFiltersOption.getFoodTypes();\r\n        let category = recipe.getCategory();\r\n\r\n        for (let i = 0; i < foodTypeList.length; i++) {\r\n            console.log(\"list[foodTypeList[i]]\", list[foodTypeList[i]].name)\r\n            if (list[foodTypeList[i]].name === category) {\r\n                return true\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    const updateRecipesForDiet = (newFilters) => {\r\n        let dietList = newFilters[FilterOptionStates[\"2\"]];\r\n        console.log(\"diet\", dietList)\r\n\r\n        let tempRecipes = [];\r\n        if (dietList.length === 0) {\r\n            for (const recipe of AllRecipes) {\r\n                if (FoodTypeCheck(recipe, newFilters)) {\r\n                    tempRecipes.push(recipe)\r\n                }\r\n            }\r\n            setCurRecipes(tempRecipes)\r\n            return\r\n        }\r\n\r\n        for (let recipe of AllRecipes) {\r\n            if (FoodTypeCheck(recipe, newFilters) && dietFilterCheck(recipe, newFilters)) {\r\n                tempRecipes.push(recipe)\r\n            }\r\n        }\r\n\r\n        setCurRecipes(tempRecipes)\r\n    }\r\n\r\n\r\n    const updateRecipesForFoodType = (newFilters) => {\r\n        let tempRecipes = [];\r\n        let foodTypeList = newFilters[FilterOptionStates[\"1\"]]\r\n        if (foodTypeList.length === 0) {\r\n            for (const recipe of AllRecipes) {\r\n                if (dietFilterCheck(recipe, newFilters)) {\r\n                    tempRecipes.push(recipe)\r\n                }\r\n            }\r\n            setCurRecipes(tempRecipes)\r\n            return;\r\n        }\r\n        console.log(\"newFulter\", foodTypeList)\r\n\r\n        for (let recipe of AllRecipes) {\r\n            if (FoodTypeCheck(recipe, newFilters) && dietFilterCheck(recipe, newFilters)) {\r\n                tempRecipes.push(recipe)\r\n            }\r\n        }\r\n        setCurRecipes(tempRecipes)\r\n    }\r\n    const renderRecipes = () => curRecipes.map((recipe, index) => (\r\n        <div>\r\n            <GridListTile>\r\n                <MediaCard\r\n                    recipe={recipe}\r\n                    author={recipe.getAuthor()}\r\n                    img={recipe.getMainImage() || 'https://ifoodreal.com/wp-content/uploads/2018/12/FG-healthy-spinach-salad-recipe.jpg'}\r\n                    title={recipe.getName()}\r\n                />\r\n            </GridListTile>\r\n        </div>\r\n    ))\r\n\r\n\r\n    if (AllRecipes.length === 0) {\r\n        return (\r\n            <div className=\"recipes\">\r\n                <h1>\r\n                    Add your first recipe!\r\n                </h1>\r\n            </div>\r\n\r\n\r\n        );\r\n    } else {\r\n        console.log(\"not empty\")\r\n        return (\r\n            <div className=\"recipes\">\r\n\r\n                <div className=\"filters\">\r\n                    <CheckBox2 className=\"ant-checkbox-group-item\" handleFilters={handleFilters}\r\n                               FoodTypeCatList={AllFiltersOption.getFoodTypes()}\r\n                               DietList={AllFiltersOption.getDietFilters()}\r\n                    />\r\n                </div>\r\n                <div className={classes.root}>\r\n\r\n                    <GridList spacing={70} cellWidth={getGridListCols() * 100} cellHeight={\"auto\"}\r\n                              cols={getGridListCols()}>\r\n                        {renderRecipes()}\r\n                    </GridList>\r\n\r\n                </div>\r\n                {(curRecipes.length === 0) &&\r\n                <h1>\r\n                    Empty for now. add a recipe!\r\n                </h1>}\r\n            </div>)\r\n    }\r\n}\r\n","import {Image} from 'react-bootstrap';\nimport { Grid} from '@material-ui/core';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport WhatsAppShare from \"./WhatsAppShare\";\nimport DishesView from \"./DishesView\";\nimport {useAuth} from \"../contexts/AuthContext\";\nimport DishesView2 from \"./DishesView2\";\n\n\n\nfunction Header(props) {\n\n// styles\n    const useStyles = makeStyles({\n        TitleStyle: {\n            color: \"#000\",\n            fontSize: '55px',\n            border: \"white\",\n            textAlign: \"center\",\n            marginTop: \"30px\",\n            marginLeft: \"10px\"\n        },\n        FamImgStyle: {\n            width: \"250px\",\n            minWidth: \"150px\",\n            height: \"160px\",\n            padding: \"1px\",\n            margin: \"30px 0 0 45px \",\n            borderRadius: \"10%\",\n            boxShadow: \"0 0 1px 1px \"\n        }\n    })\n    const classes = useStyles();\n    const {groupcode} = useAuth();\n\n    return (\n        <Grid container>\n            <Grid item xs={3} sm={2}>\n                <br/>\n                <div>\n                    <Image\n                        // className=\"img-thumbnail\"\n                        className={classes.FamImgStyle}\n                           src={\"https://images.unsplash.com/photo-1606787842514-a7998e6bee38?ixid=MnwxMjA3fDB8MHxzZWFyY2h8MjF8fGZhbWlseXxlbnwwfHwwfHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=400&q=60\"}\n                           alt=\"family's img\"/>\n                </div>\n            </Grid>\n            <Grid item sm={7}>\n                <br/><br/><br/>\n                <h1 className={classes.TitleStyle}> &emsp;&nbsp;&nbsp;{props.name}'s\n                    family\n                    CookBook\n                </h1>\n            </Grid>\n            <Grid item xs={3} direction=\"column\">\n                <div>\n                    <br/><br/>\n                    <h5> Group code : <strong>{groupcode}</strong></h5>\n                    <div>\n                        {WhatsAppShare({groupcode})}\n                    </div>\n                </div>\n            </Grid>\n        </Grid>\n    )\n}\n\nfunction FamilyPage() {\n    // const classes = useStyles();\n    const {familyName} = useAuth();\n\n    return (\n        <div>\n            {/*<Container maxWidth={\"xl\"} className={classes.backgroundImg}>*/}\n                <div className=\"main_body_items_and_filter\">\n                    <div className={\"header\"}>\n                        {familyName && <Header name={familyName}/>}\n                        {!familyName && <Header name=\"Kaufman\"/>}\n                        <br/>\n                        {/*TODO: send image to header from firebase*/}\n                    </div>\n                    <DishesView2/>\n                </div>\n            {/*</Container>*/}\n        </div>\n    )\n}\n\nexport default FamilyPage;\n\n","import React from \"react\";\nimport { Button, Card, Row, Col, Alert } from \"react-bootstrap\";\nimport CardDeck from \"react-bootstrap/CardDeck\";\nimport Nav from \"react-bootstrap/Nav\";\nimport \"../styles/ShowRecipe.css\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 250,\n    width: 500,\n  },\n  container: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    maxWidth: \"760px\",\n    margin: \"0 auto\",\n  },\n  header: {\n    \"& img\": {\n      width: \"100%\",\n      height: \"200px\",\n      objectFit: \"cover\",\n    },\n    \"& h1\": {\n      textAlign: \"center\",\n    },\n    \"& p\": {\n      textAlign: \"center\",\n    },\n  },\n  story: {\n    marginTop: \"20px\",\n    display: \"grid\",\n    gridTemplateColumns: \"2fr 1fr\",\n    columnGap: \"20px\",\n  },\n  storyImages: {\n    display: \"grid\",\n    gridGap: \"20px\",\n    \"& img\": { width: \"100%\" },\n  },\n  recipe: {\n    marginTop: \"30px\",\n    display: \"grid\",\n    gridTemplateColumns: \"1fr 2fr\",\n    gap: \"20px\",\n  },\n  recipeInfo: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    gridColumn: \"1 / -1\",\n    fontSize: \"20px\",\n  },\n  recipeIngredients: {},\n  recipeInstructions: {},\n  comments: {},\n});\n\nexport default function ShowRecipe(props) {\n  const { recipes } = useAuth();\n\n  const classes = useStyles();\n\n  const recipe = {\n    ...recipes[0],\n    story: {\n      content:\n          \"היי היי!  לפני שבועיים עלה לבלוג גלאט פטל מבצק ספידי שהיה הצלחה מסחררת.  אחרי שהוא עלה הותקפתי בהודעות ששואלות איך אפשר לעשות את הבצק הזה מלוח.  ואני מבינה אתכן, זה בצק מושלם, הכי קל לעבודה, הכי מהיר להכנה ומתאים להכל.  אני מכינה אותו מלוח המון בבית בכל מיני צורות וטעמים אז ברגע שביקשתן קפצתי על המציאה להעלות מתכון לזה בבלוג.  בחרתי להכין מהבצק שבלולי פסטו וגבינות טבעוניות כי זה קל וטעים וכולם אוהבים את זה 🙂\",\n      images: [\n        \"https://tivoneat.co.il/wp-content/uploads/2021/06/IMG_0231.jpg\",\n      ],\n    },\n  };\n\n  const comments = [\n    { author: \"sivan\", date: 12346645452, content: \"וואי סבתא, פינקת.\" },\n    {\n      author: \"דן\",\n      date: 12346645455,\n      content: \"סבא היה עושה את זה יותר טעים.\",\n    },\n  ];\n\n  return (\n      <div className=\"outer_div\">\n        {/*{!props.id && <DefaultRecipe/>}*/}\n        {/*{props.id && recipes && recipes.length <= props.id &&*/}\n        {/*<Alert variant=\"danger\">Error: recipe does not exist!</Alert>}*/}\n        {/*{props.id && recipes.length > props.id &&*/}\n        <div className={classes.container}>\n          <Header recipe={recipe} />\n          <Story recipe={recipe} />\n          <Recipe recipe={recipe} />\n          <Comments comments={comments} />\n        </div>\n        {/*}*/}\n      </div>\n  );\n}\n\nfunction Header({ recipe }) {\n  const classes = useStyles();\n\n  return (\n      <div className={classes.header}>\n        <img src={recipe.images[0]} />\n        <h1>{recipe.name}</h1>\n        <p>\n          {\" \"}\n          don't want to read the whole story?{\" \"}\n          <a href=\"#\">get straight to the recipe </a>\n        </p>\n      </div>\n  );\n}\n\nfunction Story({ recipe }) {\n  const classes = useStyles();\n\n  return (\n      <div className={classes.story}>\n        <div>{recipe.story.content}</div>\n        <div className={classes.storyImages}>\n          {recipe.story.images.map((image) => (\n              <img src={image} />\n          ))}\n        </div>\n      </div>\n  );\n}\n\nfunction Recipe({ recipe }) {\n  const classes = useStyles();\n\n  return (\n      <div className={classes.recipe}>\n        <div className={classes.recipeInfo}>\n          {recipe.author && <span>By: {recipe.author} </span>}\n          {recipe.serving && <span>Servings: {recipe.serving} </span>}\n          {recipe.prepTime && <span>Preparation Time: {recipe.prepTime}</span>}\n        </div>\n        <div className={classes.recipeIngredients}>\n          <h2>Ingredients</h2>\n          <ul className=\"show_ingredients\">\n            {recipe.IngredientsList.map((ingredient) => (\n                <li key={ingredient}>{ingredient}</li>\n            ))}\n          </ul>\n        </div>\n        <div className={classes.recipeInstructions}>\n          <h2>Instructions</h2>\n          <ol className=\"show_instruction\">\n            {recipe.instructionDetails.map((recipeStep) => (\n                <li key={recipeStep}>{recipeStep}</li>\n            ))}\n          </ol>\n        </div>\n        <button variant=\"outline-success\">Edit Recipe</button>\n      </div>\n  );\n}\n\nfunction Comment ({comment}){\n  return (\n      <div>\n        <span>{comment.author}</span>\n        <span>{comment.date}</span>\n        <p>{comment.content}</p>\n      </div>\n  )\n\n}\n\nfunction Comments({ comments }) {\n  const classes = useStyles();\n\n  return <div>\n    <h2>Comments</h2>\n    <div className={classes.storyImages}>\n      {comments.map((comment) => (\n          <Comment comment={comment} />\n      ))}\n    </div>\n  </div>;\n}\n","import React from \"react\"\nimport {Route, Redirect} from \"react-router-dom\"\nimport {useAuth} from \"./contexts/AuthContext\"\n\nexport default function PrivateRoute( { component: Component, ...rest}) {\n    const {currentUser} = useAuth();\n\n    return (\n        <Route\n            {...rest}\n            render={props =>{\n                return currentUser ? <Component {...props}/> : <Redirect to=\"/\" />\n            }}>\n\n        </Route>\n    )\n}","import {DropzoneArea} from \"material-ui-dropzone\";\r\nimport {useEffect, useRef, useState} from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {CircularProgress, makeStyles} from \"@material-ui/core\";\r\nimport {green} from \"@material-ui/core/colors\";\r\nimport clsx from \"clsx\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport firebase from \"firebase\";\r\nimport {tempRecipe} from \"./addRecipeMain\";\r\nimport {PhotoCamera} from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n        input: {\r\n            display: 'none',\r\n        },\r\n        imgCenter: {\r\n            alignItems: 'center',\r\n            justifyContent: \"centre\",\r\n            textAlign: 'center',\r\n            margin: 'auto'\r\n        },\r\n        wrapper: {\r\n            margin: theme.spacing(1),\r\n            position: 'relative',\r\n        },\r\n\r\n        buttonSuccess: {\r\n            backgroundColor: green[500],\r\n            '&:hover': {\r\n                backgroundColor: green[700],\r\n            },\r\n        },\r\n        fabProgress: {\r\n            color: green[500],\r\n            position: 'absolute',\r\n            top: -6,\r\n            left: -6,\r\n            zIndex: 1,\r\n        },\r\n        buttonProgress: {\r\n            color: green[500],\r\n            position: 'absolute',\r\n            top: '50%',\r\n            left: '50%',\r\n            marginTop: -12,\r\n            marginLeft: -12,\r\n        },\r\n        button: {\r\n            background:\r\n                \"linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)\",\r\n            marginTop: theme.spacing(3),\r\n            marginLeft: theme.spacing(1)\r\n        },\r\n\r\n\r\n    }\r\n));\r\n\r\nexport default function StoryDropImage(props) {\r\n    const [loading, setLoading] = useState(false);\r\n    const [success, setSuccess] = useState(false);\r\n    const [filesArr, setFilesArr] = useState()\r\n    const [urlArr, setUrlArr] = useState([])\r\n\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        console.log(\"urlArr\", urlArr);\r\n        console.log(\"13\", success)\r\n    }, [success, urlArr])\r\n\r\n\r\n    const buttonClassname = clsx({\r\n        [classes.buttonSuccess]: success,\r\n    });\r\n\r\n    function resolveAfter2Seconds() {\r\n\r\n        return new Promise(resolve => {\r\n            setTimeout(() => {\r\n                resolve('resolved');\r\n            }, 2000);\r\n        });\r\n    }\r\n\r\n\r\n    const uploadFile = async (files) => {\r\n        if (!files) return;\r\n        const storageRef = await firebase.storage().ref(\"images\");\r\n        for (const file of files) {\r\n            let fileName = file.name;\r\n            const fileRef = await storageRef.child(fileName)\r\n            await fileRef.put(file).on(\r\n                \"state_changed\",\r\n                (snapshot) => {\r\n                },\r\n                error => {\r\n                    console.log(error);\r\n                },\r\n                () => {\r\n                    storageRef.child(fileName)\r\n                        .getDownloadURL()\r\n                        .then(url => {\r\n                            setUrlArr([...urlArr, url]);\r\n                        });\r\n                }\r\n            );\r\n            await resolveAfter2Seconds()\r\n        }\r\n    }\r\n\r\n\r\n    return (<div>\r\n          <DropzoneArea\r\n        acceptedFiles={['image/*']}\r\n        dropzoneText={\"Drag and drop an image here or click\"}\r\n        onChange={(files) => {\r\n            setFilesArr(files);\r\n            setSuccess(false)\r\n        }\r\n        }\r\n    />\r\n        <div className={classes.wrapper}>\r\n            <Fab\r\n                onClick={async () => {\r\n                    setFilesArr([])\r\n                    setLoading(true);\r\n                    setSuccess(false)\r\n                    const urlArrAwait = await uploadFile(filesArr)\r\n                    setSuccess(true)\r\n                    tempRecipe.setImages(urlArrAwait);\r\n                    setLoading(false);\r\n\r\n                }}\r\n                component=\"span\"\r\n                aria-label=\"upload\"\r\n                color=\"primary\"\r\n                className={buttonClassname}>\r\n                {success ? <CheckIcon/> : <SaveIcon lab> Save </SaveIcon>}\r\n            </Fab>\r\n            {loading && <CircularProgress\r\n                size={64} className={classes.fabProgress}/>\r\n            }\r\n        </div>\r\n\r\n    </div>)\r\n\r\n}","import React from \"react\";\nimport {BrowserRouter as Router, Switch, Route, BrowserRouter} from \"react-router-dom\";\nimport {useParams} from \"react-router\";\nimport \"./styles/app.css\";\nimport GroupCode from \"./pages/group-code\";\nimport SignUp from \"./pages/SignUp\";\nimport AddStory from \"./pages/AddStory\";\nimport NavBar from \"./pages/NavBar\";\nimport AddRecipeMain from \"./addRecipe/addRecipeMain\";\nimport ShowRecipe from \"./pages/ShowRecipe\";\nimport ShowStory from \"./pages/ShowStory\"\nimport {AuthProvider} from \"./contexts/AuthContext\"\nimport FamilyPage from \"./familyPage/FamilyPage\"\nimport SandBox2 from \"./ShowRecipeDir/ShowRecipeCopy\"\n\n//\n// import TestAddRecipeToFB from \"./addRecipe/TestAddRecipeToFB\";\n// import uploadImage from \"./addRecipe/UploadImage\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport AddStoryRecipe from \"./addRecipe/AddStoryRecipe\";\nimport StoryDropImage from \"./addRecipe/StoryDropImage\";\n\n\n\nfunction App() {\n    const [showSignUp, setShowSignUp] = React.useState(false);\n\n    function StartPage() {\n        if (showSignUp) {\n            return <SignUp setShowSignUp={setShowSignUp}/>;\n        } else {\n            return <GroupCode setShowSignUp={setShowSignUp}/>;\n        }\n    }\n\n    function TempShowRecipe() {\n        let { id } = useParams();\n        return <ShowRecipe id={id}/>;\n    }\n\n    //TODO: shelly - use private routes\n    return (\n        <div className=\"App\">\n            <BrowserRouter basename={process.env.PUBLIC_URL}>\n\n            <Router>\n                <AuthProvider>\n                    <NavBar/>\n                    <div className=\"content\">\n                        <Switch>\n                            <Route exact path=\"/\">\n                                <div className=\"fix\">\n                                    <StartPage/>\n                                </div>\n                            </Route>\n                            <Route path=\"/recipe/:id\" children={<TempShowRecipe />} />\n                            <PrivateRoute path=\"/addstory\" component={AddStory} />\n                            <PrivateRoute path=\"/main\" component={FamilyPage} />\n                            <Route path=\"/addstory\" component={AddStory}/>\n                            <Route path=\"/addrecipe\" component={AddRecipeMain}/>\n                            <Route path=\"/showrecipe\" component={SandBox2}/>\n                            <Route path=\"/showstory\" component={ShowStory}/>\n                            <Route path=\"/main\" component={FamilyPage}/>\n                            <Route path=\"/sandbox2\" component={SandBox2}/>\n                            <Route path=\"/test\" component={StoryDropImage}/>\n                        </Switch>\n\n                    </div>\n                </AuthProvider>\n            </Router>\n            </BrowserRouter>\n\n        </div>\n    );\n    // }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App.jsx\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { HelmetProvider } from 'react-helmet-async';\n\nReactDOM.render(\n    <React.StrictMode>\n        <HelmetProvider>\n            <App />\n        </HelmetProvider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n\n// // Hot Module Replacement (HMR) - Remove this snippet to remove HMR.\n// // Learn more: https://vitejs.dev/guide/api-hmr.html\n// if (import.meta.hot) {\n//     import.meta.hot.accept();\n// }\n\n"],"sourceRoot":""}